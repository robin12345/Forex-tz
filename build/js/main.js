function check(e){e.value=e.value.replace(/[^\d]/g,"")}!function(e,t){function n(e){var t=he[e]={};return K.each(e.split(te),function(e,n){t[n]=!0}),t}function r(e,n,r){if(r===t&&1===e.nodeType){var i="data-"+n.replace(me,"-$1").toLowerCase();if(r=e.getAttribute(i),"string"==typeof r){try{r="true"===r?!0:"false"===r?!1:"null"===r?null:+r+""===r?+r:ge.test(r)?K.parseJSON(r):r}catch(o){}K.data(e,n,r)}else r=t}return r}function i(e){var t;for(t in e)if(("data"!==t||!K.isEmptyObject(e[t]))&&"toJSON"!==t)return!1;return!0}function o(){return!1}function s(){return!0}function a(e){return!e||!e.parentNode||11===e.parentNode.nodeType}function u(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}function l(e,t,n){if(t=t||0,K.isFunction(t))return K.grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return K.grep(e,function(e,r){return e===t===n});if("string"==typeof t){var r=K.grep(e,function(e){return 1===e.nodeType});if(Fe.test(t))return K.filter(t,r,!n);t=K.filter(t,r)}return K.grep(e,function(e,r){return K.inArray(e,t)>=0===n})}function c(e){var t=Pe.split("|"),n=e.createDocumentFragment();if(n.createElement)for(;t.length;)n.createElement(t.pop());return n}function f(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function p(e,t){if(1===t.nodeType&&K.hasData(e)){var n,r,i,o=K._data(e),s=K._data(t,o),a=o.events;if(a){delete s.handle,s.events={};for(n in a)for(r=0,i=a[n].length;i>r;r++)K.event.add(t,n,a[n][r])}s.data&&(s.data=K.extend({},s.data))}}function d(e,t){var n;1===t.nodeType&&(t.clearAttributes&&t.clearAttributes(),t.mergeAttributes&&t.mergeAttributes(e),n=t.nodeName.toLowerCase(),"object"===n?(t.parentNode&&(t.outerHTML=e.outerHTML),K.support.html5Clone&&e.innerHTML&&!K.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):"input"===n&&Ge.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):"option"===n?t.selected=e.defaultSelected:"input"===n||"textarea"===n?t.defaultValue=e.defaultValue:"script"===n&&t.text!==e.text&&(t.text=e.text),t.removeAttribute(K.expando))}function h(e){return"undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName("*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll("*"):[]}function g(e){Ge.test(e.type)&&(e.defaultChecked=e.checked)}function m(e,t){if(t in e)return t;for(var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=vt.length;i--;)if(t=vt[i]+n,t in e)return t;return r}function v(e,t){return e=t||e,"none"===K.css(e,"display")||!K.contains(e.ownerDocument,e)}function y(e,t){for(var n,r,i=[],o=0,s=e.length;s>o;o++)n=e[o],n.style&&(i[o]=K._data(n,"olddisplay"),t?(!i[o]&&"none"===n.style.display&&(n.style.display=""),""===n.style.display&&v(n)&&(i[o]=K._data(n,"olddisplay",T(n.nodeName)))):(r=nt(n,"display"),!i[o]&&"none"!==r&&K._data(n,"olddisplay",r)));for(o=0;s>o;o++)n=e[o],n.style&&(t&&"none"!==n.style.display&&""!==n.style.display||(n.style.display=t?i[o]||"":"none"));return e}function b(e,t,n){var r=ct.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function x(e,t,n,r){for(var i=n===(r?"border":"content")?4:"width"===t?1:0,o=0;4>i;i+=2)"margin"===n&&(o+=K.css(e,n+mt[i],!0)),r?("content"===n&&(o-=parseFloat(nt(e,"padding"+mt[i]))||0),"margin"!==n&&(o-=parseFloat(nt(e,"border"+mt[i]+"Width"))||0)):(o+=parseFloat(nt(e,"padding"+mt[i]))||0,"padding"!==n&&(o+=parseFloat(nt(e,"border"+mt[i]+"Width"))||0));return o}function w(e,t,n){var r="width"===t?e.offsetWidth:e.offsetHeight,i=!0,o=K.support.boxSizing&&"border-box"===K.css(e,"boxSizing");if(0>=r||null==r){if(r=nt(e,t),(0>r||null==r)&&(r=e.style[t]),ft.test(r))return r;i=o&&(K.support.boxSizingReliable||r===e.style[t]),r=parseFloat(r)||0}return r+x(e,t,n||(o?"border":"content"),i)+"px"}function T(e){if(dt[e])return dt[e];var t=K("<"+e+">").appendTo(R.body),n=t.css("display");return t.remove(),("none"===n||""===n)&&(rt=R.body.appendChild(rt||K.extend(R.createElement("iframe"),{frameBorder:0,width:0,height:0})),it&&rt.createElement||(it=(rt.contentWindow||rt.contentDocument).document,it.write("<!doctype html><html><body>"),it.close()),t=it.body.appendChild(it.createElement(e)),n=nt(t,"display"),R.body.removeChild(rt)),dt[e]=n,n}function k(e,t,n,r){var i;if(K.isArray(t))K.each(t,function(t,i){n||xt.test(e)?r(e,i):k(e+"["+("object"==typeof i?t:"")+"]",i,n,r)});else if(n||"object"!==K.type(t))r(e,t);else for(i in t)k(e+"["+i+"]",t[i],n,r)}function E(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var r,i,o,s=t.toLowerCase().split(te),a=0,u=s.length;if(K.isFunction(n))for(;u>a;a++)r=s[a],o=/^\+/.test(r),o&&(r=r.substr(1)||"*"),i=e[r]=e[r]||[],i[o?"unshift":"push"](n)}}function N(e,n,r,i,o,s){o=o||n.dataTypes[0],s=s||{},s[o]=!0;for(var a,u=e[o],l=0,c=u?u.length:0,f=e===Ft;c>l&&(f||!a);l++)a=u[l](n,r,i),"string"==typeof a&&(!f||s[a]?a=t:(n.dataTypes.unshift(a),a=N(e,n,r,i,a,s)));return(f||!a)&&!s["*"]&&(a=N(e,n,r,i,"*",s)),a}function _(e,n){var r,i,o=K.ajaxSettings.flatOptions||{};for(r in n)n[r]!==t&&((o[r]?e:i||(i={}))[r]=n[r]);i&&K.extend(!0,e,i)}function C(e,n,r){var i,o,s,a,u=e.contents,l=e.dataTypes,c=e.responseFields;for(o in c)o in r&&(n[c[o]]=r[o]);for(;"*"===l[0];)l.shift(),i===t&&(i=e.mimeType||n.getResponseHeader("content-type"));if(i)for(o in u)if(u[o]&&u[o].test(i)){l.unshift(o);break}if(l[0]in r)s=l[0];else{for(o in r){if(!l[0]||e.converters[o+" "+l[0]]){s=o;break}a||(a=o)}s=s||a}return s?(s!==l[0]&&l.unshift(s),r[s]):void 0}function S(e,t){var n,r,i,o,s=e.dataTypes.slice(),a=s[0],u={},l=0;if(e.dataFilter&&(t=e.dataFilter(t,e.dataType)),s[1])for(n in e.converters)u[n.toLowerCase()]=e.converters[n];for(;i=s[++l];)if("*"!==i){if("*"!==a&&a!==i){if(n=u[a+" "+i]||u["* "+i],!n)for(r in u)if(o=r.split(" "),o[1]===i&&(n=u[a+" "+o[0]]||u["* "+o[0]])){n===!0?n=u[r]:u[r]!==!0&&(i=o[0],s.splice(l--,0,i));break}if(n!==!0)if(n&&e["throws"])t=n(t);else try{t=n(t)}catch(c){return{state:"parsererror",error:n?c:"No conversion from "+a+" to "+i}}}a=i}return{state:"success",data:t}}function A(){try{return new e.XMLHttpRequest}catch(t){}}function j(){try{return new e.ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}function $(){return setTimeout(function(){Jt=t},0),Jt=K.now()}function L(e,t){K.each(t,function(t,n){for(var r=(Zt[t]||[]).concat(Zt["*"]),i=0,o=r.length;o>i;i++)if(r[i].call(e,t,n))return})}function H(e,t,n){var r,i=0,o=Kt.length,s=K.Deferred().always(function(){delete a.elem}),a=function(){for(var t=Jt||$(),n=Math.max(0,u.startTime+u.duration-t),r=1-(n/u.duration||0),i=0,o=u.tweens.length;o>i;i++)u.tweens[i].run(r);return s.notifyWith(e,[u,r,n]),1>r&&o?n:(s.resolveWith(e,[u]),!1)},u=s.promise({elem:e,props:K.extend({},t),opts:K.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Jt||$(),duration:n.duration,tweens:[],createTween:function(t,n,r){var i=K.Tween(e,u.opts,t,n,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(i),i},stop:function(t){for(var n=0,r=t?u.tweens.length:0;r>n;n++)u.tweens[n].run(1);return t?s.resolveWith(e,[u,t]):s.rejectWith(e,[u,t]),this}}),l=u.props;for(D(l,u.opts.specialEasing);o>i;i++)if(r=Kt[i].call(u,e,l,u.opts))return r;return L(u,l),K.isFunction(u.opts.start)&&u.opts.start.call(e,u),K.fx.timer(K.extend(a,{anim:u,queue:u.opts.queue,elem:e})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function D(e,t){var n,r,i,o,s;for(n in e)if(r=K.camelCase(n),i=t[r],o=e[n],K.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),s=K.cssHooks[r],s&&"expand"in s){o=s.expand(o),delete e[r];for(n in o)n in e||(e[n]=o[n],t[n]=i)}else t[r]=i}function O(e,t,n){var r,i,o,s,a,u,l,c,f=this,p=e.style,d={},h=[],g=e.nodeType&&v(e);n.queue||(l=K._queueHooks(e,"fx"),null==l.unqueued&&(l.unqueued=0,c=l.empty.fire,l.empty.fire=function(){l.unqueued||c()}),l.unqueued++,f.always(function(){f.always(function(){l.unqueued--,K.queue(e,"fx").length||l.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],"inline"===K.css(e,"display")&&"none"===K.css(e,"float")&&(K.support.inlineBlockNeedsLayout&&"inline"!==T(e.nodeName)?p.zoom=1:p.display="inline-block")),n.overflow&&(p.overflow="hidden",K.support.shrinkWrapBlocks||f.done(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(r in t)if(o=t[r],Gt.exec(o)){if(delete t[r],o===(g?"hide":"show"))continue;h.push(r)}if(s=h.length)for(a=K._data(e,"fxshow")||K._data(e,"fxshow",{}),g?K(e).show():f.done(function(){K(e).hide()}),f.done(function(){var t;K.removeData(e,"fxshow",!0);for(t in d)K.style(e,t,d[t])}),r=0;s>r;r++)i=h[r],u=f.createTween(i,g?a[i]:0),d[i]=a[i]||K.style(e,i),i in a||(a[i]=u.start,g&&(u.end=u.start,u.start="width"===i||"height"===i?1:0))}function F(e,t,n,r,i){return new F.prototype.init(e,t,n,r,i)}function M(e,t){var n,r={height:e},i=0;for(t=t?1:0;4>i;i+=2-t)n=mt[i],r["margin"+n]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}function I(e){return K.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}var P,q,R=e.document,B=e.location,W=e.navigator,z=e.jQuery,X=e.$,U=Array.prototype.push,J=Array.prototype.slice,V=Array.prototype.indexOf,G=Object.prototype.toString,Y=Object.prototype.hasOwnProperty,Q=String.prototype.trim,K=function(e,t){return new K.fn.init(e,t,P)},Z=/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,ee=/\S/,te=/\s+/,ne=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,re=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,ie=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,oe=/^[\],:{}\s]*$/,se=/(?:^|:|,)(?:\s*\[)+/g,ae=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,ue=/"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,le=/^-ms-/,ce=/-([\da-z])/gi,fe=function(e,t){return(t+"").toUpperCase()},pe=function(){R.addEventListener?(R.removeEventListener("DOMContentLoaded",pe,!1),K.ready()):"complete"===R.readyState&&(R.detachEvent("onreadystatechange",pe),K.ready())},de={};K.fn=K.prototype={constructor:K,init:function(e,n,r){var i,o,s;if(!e)return this;if(e.nodeType)return this.context=this[0]=e,this.length=1,this;if("string"==typeof e){if(i="<"===e.charAt(0)&&">"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:re.exec(e),i&&(i[1]||!n)){if(i[1])return n=n instanceof K?n[0]:n,s=n&&n.nodeType?n.ownerDocument||n:R,e=K.parseHTML(i[1],s,!0),ie.test(i[1])&&K.isPlainObject(n)&&this.attr.call(e,n,!0),K.merge(this,e);if(o=R.getElementById(i[2]),o&&o.parentNode){if(o.id!==i[2])return r.find(e);this.length=1,this[0]=o}return this.context=R,this.selector=e,this}return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e)}return K.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),K.makeArray(e,this))},selector:"",jquery:"1.8.1",length:0,size:function(){return this.length},toArray:function(){return J.call(this)},get:function(e){return null==e?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:function(e,t,n){var r=K.merge(this.constructor(),e);return r.prevObject=this,r.context=this.context,"find"===t?r.selector=this.selector+(this.selector?" ":"")+n:t&&(r.selector=this.selector+"."+t+"("+n+")"),r},each:function(e,t){return K.each(this,e,t)},ready:function(e){return K.ready.promise().done(e),this},eq:function(e){return e=+e,-1===e?this.slice(e):this.slice(e,e+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(J.apply(this,arguments),"slice",J.call(arguments).join(","))},map:function(e){return this.pushStack(K.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:U,sort:[].sort,splice:[].splice},K.fn.init.prototype=K.fn,K.extend=K.fn.extend=function(){var e,n,r,i,o,s,a=arguments[0]||{},u=1,l=arguments.length,c=!1;for("boolean"==typeof a&&(c=a,a=arguments[1]||{},u=2),"object"!=typeof a&&!K.isFunction(a)&&(a={}),l===u&&(a=this,--u);l>u;u++)if(null!=(e=arguments[u]))for(n in e)r=a[n],i=e[n],a!==i&&(c&&i&&(K.isPlainObject(i)||(o=K.isArray(i)))?(o?(o=!1,s=r&&K.isArray(r)?r:[]):s=r&&K.isPlainObject(r)?r:{},a[n]=K.extend(c,s,i)):i!==t&&(a[n]=i));return a},K.extend({noConflict:function(t){return e.$===K&&(e.$=X),t&&e.jQuery===K&&(e.jQuery=z),K},isReady:!1,readyWait:1,holdReady:function(e){e?K.readyWait++:K.ready(!0)},ready:function(e){if(e===!0?!--K.readyWait:!K.isReady){if(!R.body)return setTimeout(K.ready,1);K.isReady=!0,e!==!0&&--K.readyWait>0||(q.resolveWith(R,[K]),K.fn.trigger&&K(R).trigger("ready").off("ready"))}},isFunction:function(e){return"function"===K.type(e)},isArray:Array.isArray||function(e){return"array"===K.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?String(e):de[G.call(e)]||"object"},isPlainObject:function(e){if(!e||"object"!==K.type(e)||e.nodeType||K.isWindow(e))return!1;try{if(e.constructor&&!Y.call(e,"constructor")&&!Y.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(n){return!1}var r;for(r in e);return r===t||Y.call(e,r)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw new Error(e)},parseHTML:function(e,t,n){var r;return e&&"string"==typeof e?("boolean"==typeof t&&(n=t,t=0),t=t||R,(r=ie.exec(e))?[t.createElement(r[1])]:(r=K.buildFragment([e],t,n?null:[]),K.merge([],(r.cacheable?K.clone(r.fragment):r.fragment).childNodes))):null},parseJSON:function(t){return t&&"string"==typeof t?(t=K.trim(t),e.JSON&&e.JSON.parse?e.JSON.parse(t):oe.test(t.replace(ae,"@").replace(ue,"]").replace(se,""))?new Function("return "+t)():void K.error("Invalid JSON: "+t)):null},parseXML:function(n){var r,i;if(!n||"string"!=typeof n)return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,"text/xml")):(r=new ActiveXObject("Microsoft.XMLDOM"),r.async="false",r.loadXML(n))}catch(o){r=t}return(!r||!r.documentElement||r.getElementsByTagName("parsererror").length)&&K.error("Invalid XML: "+n),r},noop:function(){},globalEval:function(t){t&&ee.test(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(le,"ms-").replace(ce,fe)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toUpperCase()===t.toUpperCase()},each:function(e,n,r){var i,o=0,s=e.length,a=s===t||K.isFunction(e);if(r)if(a){for(i in e)if(n.apply(e[i],r)===!1)break}else for(;s>o&&n.apply(e[o++],r)!==!1;);else if(a){for(i in e)if(n.call(e[i],i,e[i])===!1)break}else for(;s>o&&n.call(e[o],o,e[o++])!==!1;);return e},trim:Q&&!Q.call("\ufeff ")?function(e){return null==e?"":Q.call(e)}:function(e){return null==e?"":e.toString().replace(ne,"")},makeArray:function(e,t){var n,r=t||[];return null!=e&&(n=K.type(e),null==e.length||"string"===n||"function"===n||"regexp"===n||K.isWindow(e)?U.call(r,e):K.merge(r,e)),r},inArray:function(e,t,n){var r;if(t){if(V)return V.call(t,e,n);for(r=t.length,n=n?0>n?Math.max(0,r+n):n:0;r>n;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,o=0;if("number"==typeof r)for(;r>o;o++)e[i++]=n[o];else for(;n[o]!==t;)e[i++]=n[o++];return e.length=i,e},grep:function(e,t,n){var r,i=[],o=0,s=e.length;for(n=!!n;s>o;o++)r=!!t(e[o],o),n!==r&&i.push(e[o]);return i},map:function(e,n,r){var i,o,s=[],a=0,u=e.length,l=e instanceof K||u!==t&&"number"==typeof u&&(u>0&&e[0]&&e[u-1]||0===u||K.isArray(e));if(l)for(;u>a;a++)i=n(e[a],a,r),null!=i&&(s[s.length]=i);else for(o in e)i=n(e[o],o,r),null!=i&&(s[s.length]=i);return s.concat.apply([],s)},guid:1,proxy:function(e,n){var r,i,o;return"string"==typeof n&&(r=e[n],n=e,e=r),K.isFunction(e)?(i=J.call(arguments,2),o=function(){return e.apply(n,i.concat(J.call(arguments)))},o.guid=e.guid=e.guid||o.guid||K.guid++,o):t},access:function(e,n,r,i,o,s,a){var u,l=null==r,c=0,f=e.length;if(r&&"object"==typeof r){for(c in r)K.access(e,n,c,r[c],1,s,i);o=1}else if(i!==t){if(u=a===t&&K.isFunction(i),l&&(u?(u=n,n=function(e,t,n){return u.call(K(e),n)}):(n.call(e,i),n=null)),n)for(;f>c;c++)n(e[c],r,u?i.call(e[c],c,n(e[c],r)):i,a);o=1}return o?e:l?n.call(e):f?n(e[0],r):s},now:function(){return(new Date).getTime()}}),K.ready.promise=function(t){if(!q)if(q=K.Deferred(),"complete"===R.readyState)setTimeout(K.ready,1);else if(R.addEventListener)R.addEventListener("DOMContentLoaded",pe,!1),e.addEventListener("load",K.ready,!1);else{R.attachEvent("onreadystatechange",pe),e.attachEvent("onload",K.ready);var n=!1;try{n=null==e.frameElement&&R.documentElement}catch(r){}n&&n.doScroll&&function i(){if(!K.isReady){try{n.doScroll("left")}catch(e){return setTimeout(i,50)}K.ready()}}()}return q.promise(t)},K.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(e,t){de["[object "+t+"]"]=t.toLowerCase()}),P=K(R);var he={};K.Callbacks=function(e){e="string"==typeof e?he[e]||n(e):K.extend({},e);var r,i,o,s,a,u,l=[],c=!e.once&&[],f=function(t){for(r=e.memory&&t,i=!0,u=s||0,s=0,a=l.length,o=!0;l&&a>u;u++)if(l[u].apply(t[0],t[1])===!1&&e.stopOnFalse){r=!1;break}o=!1,l&&(c?c.length&&f(c.shift()):r?l=[]:p.disable())},p={add:function(){if(l){var t=l.length;!function n(t){K.each(t,function(t,r){var i=K.type(r);"function"!==i||e.unique&&p.has(r)?r&&r.length&&"string"!==i&&n(r):l.push(r)})}(arguments),o?a=l.length:r&&(s=t,f(r))}return this},remove:function(){return l&&K.each(arguments,function(e,t){for(var n;(n=K.inArray(t,l,n))>-1;)l.splice(n,1),o&&(a>=n&&a--,u>=n&&u--)}),this},has:function(e){return K.inArray(e,l)>-1},empty:function(){return l=[],this},disable:function(){return l=c=r=t,this},disabled:function(){return!l},lock:function(){return c=t,r||p.disable(),this},locked:function(){return!c},fireWith:function(e,t){return t=t||[],t=[e,t.slice?t.slice():t],l&&(!i||c)&&(o?c.push(t):f(t)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!i}};return p},K.extend({Deferred:function(e){var t=[["resolve","done",K.Callbacks("once memory"),"resolved"],["reject","fail",K.Callbacks("once memory"),"rejected"],["notify","progress",K.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return K.Deferred(function(n){K.each(t,function(t,r){var o=r[0],s=e[t];i[r[1]](K.isFunction(s)?function(){var e=s.apply(this,arguments);e&&K.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[o+"With"](this===i?n:this,[e])}:n[o])}),e=null}).promise()},promise:function(e){return"object"==typeof e?K.extend(e,r):r}},i={};return r.pipe=r.then,K.each(t,function(e,o){var s=o[2],a=o[3];r[o[1]]=s.add,a&&s.add(function(){n=a},t[1^e][2].disable,t[2][2].lock),i[o[0]]=s.fire,i[o[0]+"With"]=s.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t,n,r,i=0,o=J.call(arguments),s=o.length,a=1!==s||e&&K.isFunction(e.promise)?s:0,u=1===a?e:K.Deferred(),l=function(e,n,r){return function(i){n[e]=this,r[e]=arguments.length>1?J.call(arguments):i,r===t?u.notifyWith(n,r):--a||u.resolveWith(n,r)}};if(s>1)for(t=new Array(s),n=new Array(s),r=new Array(s);s>i;i++)o[i]&&K.isFunction(o[i].promise)?o[i].promise().done(l(i,r,o)).fail(u.reject).progress(l(i,n,t)):--a;return a||u.resolveWith(r,o),u.promise()}}),K.support=function(){var t,n,r,i,o,s,a,u,l,c,f,p=R.createElement("div");if(p.setAttribute("className","t"),p.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",n=p.getElementsByTagName("*"),r=p.getElementsByTagName("a")[0],r.style.cssText="top:1px;float:left;opacity:.5",!n||!n.length||!r)return{};i=R.createElement("select"),o=i.appendChild(R.createElement("option")),s=p.getElementsByTagName("input")[0],t={leadingWhitespace:3===p.firstChild.nodeType,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:/top/.test(r.getAttribute("style")),hrefNormalized:"/a"===r.getAttribute("href"),opacity:/^0.5/.test(r.style.opacity),cssFloat:!!r.style.cssFloat,checkOn:"on"===s.value,optSelected:o.selected,getSetAttribute:"t"!==p.className,enctype:!!R.createElement("form").enctype,html5Clone:"<:nav></:nav>"!==R.createElement("nav").cloneNode(!0).outerHTML,boxModel:"CSS1Compat"===R.compatMode,submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},s.checked=!0,t.noCloneChecked=s.cloneNode(!0).checked,i.disabled=!0,t.optDisabled=!o.disabled;try{delete p.test}catch(d){t.deleteExpando=!1}if(!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",f=function(){t.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick"),p.detachEvent("onclick",f)),s=R.createElement("input"),s.value="t",s.setAttribute("type","radio"),t.radioValue="t"===s.value,s.setAttribute("checked","checked"),s.setAttribute("name","t"),p.appendChild(s),a=R.createDocumentFragment(),a.appendChild(p.lastChild),t.checkClone=a.cloneNode(!0).cloneNode(!0).lastChild.checked,t.appendChecked=s.checked,a.removeChild(s),a.appendChild(p),p.attachEvent)for(l in{submit:!0,change:!0,focusin:!0})u="on"+l,c=u in p,c||(p.setAttribute(u,"return;"),c="function"==typeof p[u]),t[l+"Bubbles"]=c;return K(function(){var n,r,i,o,s="padding:0;margin:0;border:0;display:block;overflow:hidden;",a=R.getElementsByTagName("body")[0];a&&(n=R.createElement("div"),n.style.cssText="visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",a.insertBefore(n,a.firstChild),r=R.createElement("div"),n.appendChild(r),r.innerHTML="<table><tr><td></td><td>t</td></tr></table>",i=r.getElementsByTagName("td"),i[0].style.cssText="padding:0;margin:0;border:0;display:none",c=0===i[0].offsetHeight,i[0].style.display="",i[1].style.display="none",t.reliableHiddenOffsets=c&&0===i[0].offsetHeight,r.innerHTML="",r.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",t.boxSizing=4===r.offsetWidth,t.doesNotIncludeMarginInBodyOffset=1!==a.offsetTop,e.getComputedStyle&&(t.pixelPosition="1%"!==(e.getComputedStyle(r,null)||{}).top,t.boxSizingReliable="4px"===(e.getComputedStyle(r,null)||{width:"4px"}).width,o=R.createElement("div"),o.style.cssText=r.style.cssText=s,o.style.marginRight=o.style.width="0",r.style.width="1px",r.appendChild(o),t.reliableMarginRight=!parseFloat((e.getComputedStyle(o,null)||{}).marginRight)),"undefined"!=typeof r.style.zoom&&(r.innerHTML="",r.style.cssText=s+"width:1px;padding:1px;display:inline;zoom:1",t.inlineBlockNeedsLayout=3===r.offsetWidth,r.style.display="block",r.style.overflow="visible",r.innerHTML="<div></div>",r.firstChild.style.width="5px",t.shrinkWrapBlocks=3!==r.offsetWidth,n.style.zoom=1),a.removeChild(n),n=r=i=o=null)}),a.removeChild(p),n=r=i=o=s=a=p=null,t}();var ge=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,me=/([A-Z])/g;K.extend({cache:{},deletedIds:[],uuid:0,expando:"jQuery"+(K.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(e){return e=e.nodeType?K.cache[e[K.expando]]:e[K.expando],!!e&&!i(e)},data:function(e,n,r,i){if(K.acceptData(e)){var o,s,a=K.expando,u="string"==typeof n,l=e.nodeType,c=l?K.cache:e,f=l?e[a]:e[a]&&a;if(f&&c[f]&&(i||c[f].data)||!u||r!==t)return f||(l?e[a]=f=K.deletedIds.pop()||++K.uuid:f=a),c[f]||(c[f]={},l||(c[f].toJSON=K.noop)),("object"==typeof n||"function"==typeof n)&&(i?c[f]=K.extend(c[f],n):c[f].data=K.extend(c[f].data,n)),o=c[f],i||(o.data||(o.data={}),o=o.data),r!==t&&(o[K.camelCase(n)]=r),u?(s=o[n],null==s&&(s=o[K.camelCase(n)])):s=o,s}},removeData:function(e,t,n){if(K.acceptData(e)){var r,o,s,a=e.nodeType,u=a?K.cache:e,l=a?e[K.expando]:K.expando;if(u[l]){if(t&&(r=n?u[l]:u[l].data)){K.isArray(t)||(t in r?t=[t]:(t=K.camelCase(t),t=t in r?[t]:t.split(" ")));for(o=0,s=t.length;s>o;o++)delete r[t[o]];if(!(n?i:K.isEmptyObject)(r))return}(n||(delete u[l].data,i(u[l])))&&(a?K.cleanData([e],!0):K.support.deleteExpando||u!=u.window?delete u[l]:u[l]=null)}}},_data:function(e,t,n){return K.data(e,t,n,!0)},acceptData:function(e){var t=e.nodeName&&K.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute("classid")===t}}),K.fn.extend({data:function(e,n){var i,o,s,a,u,l=this[0],c=0,f=null;if(e===t){if(this.length&&(f=K.data(l),1===l.nodeType&&!K._data(l,"parsedAttrs"))){for(s=l.attributes,u=s.length;u>c;c++)a=s[c].name,0===a.indexOf("data-")&&(a=K.camelCase(a.substring(5)),r(l,a,f[a]));K._data(l,"parsedAttrs",!0)}return f}return"object"==typeof e?this.each(function(){K.data(this,e)}):(i=e.split(".",2),i[1]=i[1]?"."+i[1]:"",o=i[1]+"!",K.access(this,function(n){return n===t?(f=this.triggerHandler("getData"+o,[i[0]]),f===t&&l&&(f=K.data(l,e),f=r(l,e,f)),f===t&&i[1]?this.data(i[0]):f):(i[1]=n,void this.each(function(){var t=K(this);t.triggerHandler("setData"+o,i),K.data(this,e,n),t.triggerHandler("changeData"+o,i)}))},null,n,arguments.length>1,null,!1))},removeData:function(e){return this.each(function(){K.removeData(this,e)})}}),K.extend({queue:function(e,t,n){var r;return e?(t=(t||"fx")+"queue",r=K._data(e,t),n&&(!r||K.isArray(n)?r=K._data(e,t,K.makeArray(n)):r.push(n)),r||[]):void 0},dequeue:function(e,t){t=t||"fx";var n=K.queue(e,t),r=n.length,i=n.shift(),o=K._queueHooks(e,t),s=function(){K.dequeue(e,t)};"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,s,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return K._data(e,n)||K._data(e,n,{empty:K.Callbacks("once memory").add(function(){K.removeData(e,t+"queue",!0),K.removeData(e,n,!0)})})}}),K.fn.extend({queue:function(e,n){var r=2;return"string"!=typeof e&&(n=e,e="fx",r--),arguments.length<r?K.queue(this[0],e):n===t?this:this.each(function(){var t=K.queue(this,e,n);K._queueHooks(this,e),"fx"===e&&"inprogress"!==t[0]&&K.dequeue(this,e)})},dequeue:function(e){return this.each(function(){K.dequeue(this,e)})},delay:function(e,t){return e=K.fx?K.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,n){var r,i=1,o=K.Deferred(),s=this,a=this.length,u=function(){--i||o.resolveWith(s,[s])};for("string"!=typeof e&&(n=e,e=t),e=e||"fx";a--;)r=K._data(s[a],e+"queueHooks"),r&&r.empty&&(i++,r.empty.add(u));return u(),o.promise(n)}});var ve,ye,be,xe=/[\t\r\n]/g,we=/\r/g,Te=/^(?:button|input)$/i,ke=/^(?:button|input|object|select|textarea)$/i,Ee=/^a(?:rea|)$/i,Ne=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,_e=K.support.getSetAttribute;K.fn.extend({attr:function(e,t){return K.access(this,K.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){K.removeAttr(this,e)})},prop:function(e,t){return K.access(this,K.prop,e,t,arguments.length>1)},removeProp:function(e){return e=K.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,o,s,a;if(K.isFunction(e))return this.each(function(t){K(this).addClass(e.call(this,t,this.className))});if(e&&"string"==typeof e)for(t=e.split(te),n=0,r=this.length;r>n;n++)if(i=this[n],1===i.nodeType)if(i.className||1!==t.length){for(o=" "+i.className+" ",s=0,a=t.length;a>s;s++)~o.indexOf(" "+t[s]+" ")||(o+=t[s]+" ");i.className=K.trim(o)}else i.className=e;return this},removeClass:function(e){var n,r,i,o,s,a,u;if(K.isFunction(e))return this.each(function(t){K(this).removeClass(e.call(this,t,this.className))});if(e&&"string"==typeof e||e===t)for(n=(e||"").split(te),a=0,u=this.length;u>a;a++)if(i=this[a],1===i.nodeType&&i.className){for(r=(" "+i.className+" ").replace(xe," "),o=0,s=n.length;s>o;o++)for(;r.indexOf(" "+n[o]+" ")>-1;)r=r.replace(" "+n[o]+" "," ");i.className=e?K.trim(r):""}return this},toggleClass:function(e,t){var n=typeof e,r="boolean"==typeof t;return K.isFunction(e)?this.each(function(n){K(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if("string"===n)for(var i,o=0,s=K(this),a=t,u=e.split(te);i=u[o++];)a=r?a:!s.hasClass(i),s[a?"addClass":"removeClass"](i);else("undefined"===n||"boolean"===n)&&(this.className&&K._data(this,"__className__",this.className),this.className=this.className||e===!1?"":K._data(this,"__className__")||"")})},hasClass:function(e){for(var t=" "+e+" ",n=0,r=this.length;r>n;n++)if(1===this[n].nodeType&&(" "+this[n].className+" ").replace(xe," ").indexOf(t)>-1)return!0;return!1},val:function(e){var n,r,i,o=this[0];{if(arguments.length)return i=K.isFunction(e),this.each(function(r){var o,s=K(this);1===this.nodeType&&(o=i?e.call(this,r,s.val()):e,null==o?o="":"number"==typeof o?o+="":K.isArray(o)&&(o=K.map(o,function(e){return null==e?"":e+""})),n=K.valHooks[this.type]||K.valHooks[this.nodeName.toLowerCase()],n&&"set"in n&&n.set(this,o,"value")!==t||(this.value=o))});if(o)return n=K.valHooks[o.type]||K.valHooks[o.nodeName.toLowerCase()],n&&"get"in n&&(r=n.get(o,"value"))!==t?r:(r=o.value,"string"==typeof r?r.replace(we,""):null==r?"":r)}}}),K.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){var t,n,r,i,o=e.selectedIndex,s=[],a=e.options,u="select-one"===e.type;if(0>o)return null;for(n=u?o:0,r=u?o+1:a.length;r>n;n++)if(i=a[n],i.selected&&(K.support.optDisabled?!i.disabled:null===i.getAttribute("disabled"))&&(!i.parentNode.disabled||!K.nodeName(i.parentNode,"optgroup"))){if(t=K(i).val(),u)return t;s.push(t)}return u&&!s.length&&a.length?K(a[o]).val():s},set:function(e,t){var n=K.makeArray(t);return K(e).find("option").each(function(){this.selected=K.inArray(K(this).val(),n)>=0}),n.length||(e.selectedIndex=-1),n}}},attrFn:{},attr:function(e,n,r,i){var o,s,a,u=e.nodeType;if(e&&3!==u&&8!==u&&2!==u)return i&&K.isFunction(K.fn[n])?K(e)[n](r):"undefined"==typeof e.getAttribute?K.prop(e,n,r):(a=1!==u||!K.isXMLDoc(e),a&&(n=n.toLowerCase(),s=K.attrHooks[n]||(Ne.test(n)?ye:ve)),r!==t?null===r?void K.removeAttr(e,n):s&&"set"in s&&a&&(o=s.set(e,r,n))!==t?o:(e.setAttribute(n,""+r),r):s&&"get"in s&&a&&null!==(o=s.get(e,n))?o:(o=e.getAttribute(n),null===o?t:o))},removeAttr:function(e,t){var n,r,i,o,s=0;if(t&&1===e.nodeType)for(r=t.split(te);s<r.length;s++)i=r[s],i&&(n=K.propFix[i]||i,o=Ne.test(i),o||K.attr(e,i,""),e.removeAttribute(_e?i:n),o&&n in e&&(e[n]=!1))},attrHooks:{type:{set:function(e,t){if(Te.test(e.nodeName)&&e.parentNode)K.error("type property can't be changed");else if(!K.support.radioValue&&"radio"===t&&K.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}},value:{get:function(e,t){return ve&&K.nodeName(e,"button")?ve.get(e,t):t in e?e.value:null},set:function(e,t,n){return ve&&K.nodeName(e,"button")?ve.set(e,t,n):void(e.value=t)}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(e,n,r){var i,o,s,a=e.nodeType;if(e&&3!==a&&8!==a&&2!==a)return s=1!==a||!K.isXMLDoc(e),s&&(n=K.propFix[n]||n,o=K.propHooks[n]),r!==t?o&&"set"in o&&(i=o.set(e,r,n))!==t?i:e[n]=r:o&&"get"in o&&null!==(i=o.get(e,n))?i:e[n]},propHooks:{tabIndex:{get:function(e){var n=e.getAttributeNode("tabindex");return n&&n.specified?parseInt(n.value,10):ke.test(e.nodeName)||Ee.test(e.nodeName)&&e.href?0:t}}}}),ye={get:function(e,n){var r,i=K.prop(e,n);return i===!0||"boolean"!=typeof i&&(r=e.getAttributeNode(n))&&r.nodeValue!==!1?n.toLowerCase():t},set:function(e,t,n){var r;return t===!1?K.removeAttr(e,n):(r=K.propFix[n]||n,r in e&&(e[r]=!0),e.setAttribute(n,n.toLowerCase())),n}},_e||(be={name:!0,id:!0,coords:!0},ve=K.valHooks.button={get:function(e,n){var r;return r=e.getAttributeNode(n),r&&(be[n]?""!==r.value:r.specified)?r.value:t},set:function(e,t,n){var r=e.getAttributeNode(n);return r||(r=R.createAttribute(n),e.setAttributeNode(r)),r.value=t+""}},K.each(["width","height"],function(e,t){
K.attrHooks[t]=K.extend(K.attrHooks[t],{set:function(e,n){return""===n?(e.setAttribute(t,"auto"),n):void 0}})}),K.attrHooks.contenteditable={get:ve.get,set:function(e,t,n){""===t&&(t="false"),ve.set(e,t,n)}}),K.support.hrefNormalized||K.each(["href","src","width","height"],function(e,n){K.attrHooks[n]=K.extend(K.attrHooks[n],{get:function(e){var r=e.getAttribute(n,2);return null===r?t:r}})}),K.support.style||(K.attrHooks.style={get:function(e){return e.style.cssText.toLowerCase()||t},set:function(e,t){return e.style.cssText=""+t}}),K.support.optSelected||(K.propHooks.selected=K.extend(K.propHooks.selected,{get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}})),K.support.enctype||(K.propFix.enctype="encoding"),K.support.checkOn||K.each(["radio","checkbox"],function(){K.valHooks[this]={get:function(e){return null===e.getAttribute("value")?"on":e.value}}}),K.each(["radio","checkbox"],function(){K.valHooks[this]=K.extend(K.valHooks[this],{set:function(e,t){return K.isArray(t)?e.checked=K.inArray(K(e).val(),t)>=0:void 0}})});var Ce=/^(?:textarea|input|select)$/i,Se=/^([^\.]*|)(?:\.(.+)|)$/,Ae=/(?:^|\s)hover(\.\S+|)\b/,je=/^key/,$e=/^(?:mouse|contextmenu)|click/,Le=/^(?:focusinfocus|focusoutblur)$/,He=function(e){return K.event.special.hover?e:e.replace(Ae,"mouseenter$1 mouseleave$1")};K.event={add:function(e,n,r,i,o){var s,a,u,l,c,f,p,d,h,g,m;if(3!==e.nodeType&&8!==e.nodeType&&n&&r&&(s=K._data(e))){for(r.handler&&(h=r,r=h.handler,o=h.selector),r.guid||(r.guid=K.guid++),u=s.events,u||(s.events=u={}),a=s.handle,a||(s.handle=a=function(e){return"undefined"==typeof K||e&&K.event.triggered===e.type?t:K.event.dispatch.apply(a.elem,arguments)},a.elem=e),n=K.trim(He(n)).split(" "),l=0;l<n.length;l++)c=Se.exec(n[l])||[],f=c[1],p=(c[2]||"").split(".").sort(),m=K.event.special[f]||{},f=(o?m.delegateType:m.bindType)||f,m=K.event.special[f]||{},d=K.extend({type:f,origType:c[1],data:i,handler:r,guid:r.guid,selector:o,namespace:p.join(".")},h),g=u[f],g||(g=u[f]=[],g.delegateCount=0,m.setup&&m.setup.call(e,i,p,a)!==!1||(e.addEventListener?e.addEventListener(f,a,!1):e.attachEvent&&e.attachEvent("on"+f,a))),m.add&&(m.add.call(e,d),d.handler.guid||(d.handler.guid=r.guid)),o?g.splice(g.delegateCount++,0,d):g.push(d),K.event.global[f]=!0;e=null}},global:{},remove:function(e,t,n,r,i){var o,s,a,u,l,c,f,p,d,h,g,m=K.hasData(e)&&K._data(e);if(m&&(p=m.events)){for(t=K.trim(He(t||"")).split(" "),o=0;o<t.length;o++)if(s=Se.exec(t[o])||[],a=u=s[1],l=s[2],a){for(d=K.event.special[a]||{},a=(r?d.delegateType:d.bindType)||a,h=p[a]||[],c=h.length,l=l?new RegExp("(^|\\.)"+l.split(".").sort().join("\\.(?:.*\\.|)")+"(\\.|$)"):null,f=0;f<h.length;f++)g=h[f],(i||u===g.origType)&&(!n||n.guid===g.guid)&&(!l||l.test(g.namespace))&&(!r||r===g.selector||"**"===r&&g.selector)&&(h.splice(f--,1),g.selector&&h.delegateCount--,d.remove&&d.remove.call(e,g));0===h.length&&c!==h.length&&((!d.teardown||d.teardown.call(e,l,m.handle)===!1)&&K.removeEvent(e,a,m.handle),delete p[a])}else for(a in p)K.event.remove(e,a+t[o],n,r,!0);K.isEmptyObject(p)&&(delete m.handle,K.removeData(e,"events",!0))}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(n,r,i,o){if(!i||3!==i.nodeType&&8!==i.nodeType){var s,a,u,l,c,f,p,d,h,g,m=n.type||n,v=[];if(Le.test(m+K.event.triggered))return;if(m.indexOf("!")>=0&&(m=m.slice(0,-1),a=!0),m.indexOf(".")>=0&&(v=m.split("."),m=v.shift(),v.sort()),(!i||K.event.customEvent[m])&&!K.event.global[m])return;if(n="object"==typeof n?n[K.expando]?n:new K.Event(m,n):new K.Event(m),n.type=m,n.isTrigger=!0,n.exclusive=a,n.namespace=v.join("."),n.namespace_re=n.namespace?new RegExp("(^|\\.)"+v.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,f=m.indexOf(":")<0?"on"+m:"",!i){s=K.cache;for(u in s)s[u].events&&s[u].events[m]&&K.event.trigger(n,r,s[u].handle.elem,!0);return}if(n.result=t,n.target||(n.target=i),r=null!=r?K.makeArray(r):[],r.unshift(n),p=K.event.special[m]||{},p.trigger&&p.trigger.apply(i,r)===!1)return;if(h=[[i,p.bindType||m]],!o&&!p.noBubble&&!K.isWindow(i)){for(g=p.delegateType||m,l=Le.test(g+m)?i:i.parentNode,c=i;l;l=l.parentNode)h.push([l,g]),c=l;c===(i.ownerDocument||R)&&h.push([c.defaultView||c.parentWindow||e,g])}for(u=0;u<h.length&&!n.isPropagationStopped();u++)l=h[u][0],n.type=h[u][1],d=(K._data(l,"events")||{})[n.type]&&K._data(l,"handle"),d&&d.apply(l,r),d=f&&l[f],d&&K.acceptData(l)&&d.apply(l,r)===!1&&n.preventDefault();return n.type=m,!o&&!n.isDefaultPrevented()&&(!p._default||p._default.apply(i.ownerDocument,r)===!1)&&("click"!==m||!K.nodeName(i,"a"))&&K.acceptData(i)&&f&&i[m]&&("focus"!==m&&"blur"!==m||0!==n.target.offsetWidth)&&!K.isWindow(i)&&(c=i[f],c&&(i[f]=null),K.event.triggered=m,i[m](),K.event.triggered=t,c&&(i[f]=c)),n.result}},dispatch:function(n){n=K.event.fix(n||e.event);var r,i,o,s,a,u,l,c,f,p=(K._data(this,"events")||{})[n.type]||[],d=p.delegateCount,h=[].slice.call(arguments),g=!n.exclusive&&!n.namespace,m=K.event.special[n.type]||{},v=[];if(h[0]=n,n.delegateTarget=this,!m.preDispatch||m.preDispatch.call(this,n)!==!1){if(d&&(!n.button||"click"!==n.type))for(o=n.target;o!=this;o=o.parentNode||this)if(o.disabled!==!0||"click"!==n.type){for(a={},l=[],r=0;d>r;r++)c=p[r],f=c.selector,a[f]===t&&(a[f]=K(f,this).index(o)>=0),a[f]&&l.push(c);l.length&&v.push({elem:o,matches:l})}for(p.length>d&&v.push({elem:this,matches:p.slice(d)}),r=0;r<v.length&&!n.isPropagationStopped();r++)for(u=v[r],n.currentTarget=u.elem,i=0;i<u.matches.length&&!n.isImmediatePropagationStopped();i++)c=u.matches[i],(g||!n.namespace&&!c.namespace||n.namespace_re&&n.namespace_re.test(c.namespace))&&(n.data=c.data,n.handleObj=c,s=((K.event.special[c.origType]||{}).handle||c.handler).apply(u.elem,h),s!==t&&(n.result=s,s===!1&&(n.preventDefault(),n.stopPropagation())));return m.postDispatch&&m.postDispatch.call(this,n),n.result}},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,n){var r,i,o,s=n.button,a=n.fromElement;return null==e.pageX&&null!=n.clientX&&(r=e.target.ownerDocument||R,i=r.documentElement,o=r.body,e.pageX=n.clientX+(i&&i.scrollLeft||o&&o.scrollLeft||0)-(i&&i.clientLeft||o&&o.clientLeft||0),e.pageY=n.clientY+(i&&i.scrollTop||o&&o.scrollTop||0)-(i&&i.clientTop||o&&o.clientTop||0)),!e.relatedTarget&&a&&(e.relatedTarget=a===e.target?n.toElement:a),!e.which&&s!==t&&(e.which=1&s?1:2&s?3:4&s?2:0),e}},fix:function(e){if(e[K.expando])return e;var t,n,r=e,i=K.event.fixHooks[e.type]||{},o=i.props?this.props.concat(i.props):this.props;for(e=K.Event(r),t=o.length;t;)n=o[--t],e[n]=r[n];return e.target||(e.target=r.srcElement||R),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,i.filter?i.filter(e,r):e},special:{load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(e,t,n){K.isWindow(this)&&(this.onbeforeunload=n)},teardown:function(e,t){this.onbeforeunload===t&&(this.onbeforeunload=null)}}},simulate:function(e,t,n,r){var i=K.extend(new K.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?K.event.trigger(i,null,t):K.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},K.event.handle=K.event.dispatch,K.removeEvent=R.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r="on"+t;e.detachEvent&&("undefined"==typeof e[r]&&(e[r]=null),e.detachEvent(r,n))},K.Event=function(e,t){return this instanceof K.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?s:o):this.type=e,t&&K.extend(this,t),this.timeStamp=e&&e.timeStamp||K.now(),this[K.expando]=!0,void 0):new K.Event(e,t)},K.Event.prototype={preventDefault:function(){this.isDefaultPrevented=s;var e=this.originalEvent;e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=s;var e=this.originalEvent;e&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=s,this.stopPropagation()},isDefaultPrevented:o,isPropagationStopped:o,isImmediatePropagationStopped:o},K.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(e,t){K.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;o.selector;return(!i||i!==r&&!K.contains(r,i))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),K.support.submitBubbles||(K.event.special.submit={setup:function(){return K.nodeName(this,"form")?!1:void K.event.add(this,"click._submit keypress._submit",function(e){var n=e.target,r=K.nodeName(n,"input")||K.nodeName(n,"button")?n.form:t;r&&!K._data(r,"_submit_attached")&&(K.event.add(r,"submit._submit",function(e){e._submit_bubble=!0}),K._data(r,"_submit_attached",!0))})},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&K.event.simulate("submit",this.parentNode,e,!0))},teardown:function(){return K.nodeName(this,"form")?!1:void K.event.remove(this,"._submit")}}),K.support.changeBubbles||(K.event.special.change={setup:function(){return Ce.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&&(K.event.add(this,"propertychange._change",function(e){"checked"===e.originalEvent.propertyName&&(this._just_changed=!0)}),K.event.add(this,"click._change",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),K.event.simulate("change",this,e,!0)})),!1):void K.event.add(this,"beforeactivate._change",function(e){var t=e.target;Ce.test(t.nodeName)&&!K._data(t,"_change_attached")&&(K.event.add(t,"change._change",function(e){this.parentNode&&!e.isSimulated&&!e.isTrigger&&K.event.simulate("change",this.parentNode,e,!0)}),K._data(t,"_change_attached",!0))})},handle:function(e){var t=e.target;return this!==t||e.isSimulated||e.isTrigger||"radio"!==t.type&&"checkbox"!==t.type?e.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return K.event.remove(this,"._change"),!Ce.test(this.nodeName)}}),K.support.focusinBubbles||K.each({focus:"focusin",blur:"focusout"},function(e,t){var n=0,r=function(e){K.event.simulate(t,e.target,K.event.fix(e),!0)};K.event.special[t]={setup:function(){0===n++&&R.addEventListener(e,r,!0)},teardown:function(){0===--n&&R.removeEventListener(e,r,!0)}}}),K.fn.extend({on:function(e,n,r,i,s){var a,u;if("object"==typeof e){"string"!=typeof n&&(r=r||n,n=t);for(u in e)this.on(u,n,r,e[u],s);return this}if(null==r&&null==i?(i=n,r=n=t):null==i&&("string"==typeof n?(i=r,r=t):(i=r,r=n,n=t)),i===!1)i=o;else if(!i)return this;return 1===s&&(a=i,i=function(e){return K().off(e),a.apply(this,arguments)},i.guid=a.guid||(a.guid=K.guid++)),this.each(function(){K.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,s;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,K(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof e){for(s in e)this.off(s,n,e[s]);return this}return(n===!1||"function"==typeof n)&&(r=n,n=t),r===!1&&(r=o),this.each(function(){K.event.remove(this,e,r,n)})},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},live:function(e,t,n){return K(this.context).on(e,this.selector,t,n),this},die:function(e,t){return K(this.context).off(e,this.selector||"**",t),this},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1==arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},trigger:function(e,t){return this.each(function(){K.event.trigger(e,t,this)})},triggerHandler:function(e,t){return this[0]?K.event.trigger(e,t,this[0],!0):void 0},toggle:function(e){var t=arguments,n=e.guid||K.guid++,r=0,i=function(n){var i=(K._data(this,"lastToggle"+e.guid)||0)%r;return K._data(this,"lastToggle"+e.guid,i+1),n.preventDefault(),t[i].apply(this,arguments)||!1};for(i.guid=n;r<t.length;)t[r++].guid=n;return this.click(i)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),K.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){K.fn[t]=function(e,n){return null==n&&(n=e,e=null),arguments.length>0?this.on(t,null,e,n):this.trigger(t)},je.test(t)&&(K.event.fixHooks[t]=K.event.keyHooks),$e.test(t)&&(K.event.fixHooks[t]=K.event.mouseHooks)}),function(e,t){function n(e,t,n,r){n=n||[],t=t||S;var i,o,s,a,u=t.nodeType;if(1!==u&&9!==u)return[];if(!e||"string"!=typeof e)return n;if(s=x(t),!s&&!r&&(i=G.exec(e)))if(a=i[1]){if(9===u){if(o=t.getElementById(a),!o||!o.parentNode)return n;if(o.id===a)return n.push(o),n}else if(t.ownerDocument&&(o=t.ownerDocument.getElementById(a))&&w(t,o)&&o.id===a)return n.push(o),n}else{if(i[2])return L.apply(n,$.call(t.getElementsByTagName(e),0)),n;if((a=i[3])&&ae&&t.getElementsByClassName)return L.apply(n,$.call(t.getElementsByClassName(a),0)),n}return h(e,t,n,r,s)}function r(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function i(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function o(e,t,n){if(e===t)return n;for(var r=e.nextSibling;r;){if(r===t)return-1;r=r.nextSibling}return 1}function s(e,t,r,i){var o,s,a,u,l,c,f,p,d,h,g=!r&&t!==S,m=(g?"<s>":"")+e.replace(X,"$1<s>"),v=F[C][m];if(v)return i?0:$.call(v,0);for(l=e,c=[],p=0,d=y.preFilter,h=y.filter;l;){(!o||(s=U.exec(l)))&&(s&&(l=l.slice(s[0].length),a.selector=f),c.push(a=[]),f="",g&&(l=" "+l)),o=!1,(s=J.exec(l))&&(f+=s[0],l=l.slice(s[0].length),o=a.push({part:s.pop().replace(X," "),string:s[0],captures:s}));for(u in h)(s=ne[u].exec(l))&&(!d[u]||(s=d[u](s,t,r)))&&(f+=s[0],l=l.slice(s[0].length),o=a.push({part:u,string:s.shift(),captures:s}));if(!o)break}return f&&(a.selector=f),i?l.length:l?n.error(e):$.call(F(m,c),0)}function a(e,t,n,r){var i=t.dir,o=j++;return e||(e=function(e){return e===n}),t.first?function(t){for(;t=t[i];)if(1===t.nodeType)return e(t)&&t}:r?function(t){for(;t=t[i];)if(1===t.nodeType&&e(t))return t}:function(t){for(var n,r=o+"."+g,s=r+"."+m;t=t[i];)if(1===t.nodeType){if((n=t[C])===s)return t.sizset;if("string"==typeof n&&0===n.indexOf(r)){if(t.sizset)return t}else{if(t[C]=s,e(t))return t.sizset=!0,t;t.sizset=!1}}}}function u(e,t){return e?function(n){var r=t(n);return r&&e(r===!0?n:r)}:t}function l(e,t,n){for(var r,i,o=0;r=e[o];o++)i=y.relative[r.part]?a(i,y.relative[r.part],t,n):u(i,y.filter[r.part].apply(null,r.captures.concat(t,n)));return i}function c(e){return function(t){for(var n,r=0;n=e[r];r++)if(n(t))return!0;return!1}}function f(e,t,r,i){for(var o=0,s=t.length;s>o;o++)n(e,t[o],r,i)}function p(e,t,r,i,o,s){var a,u=y.setFilters[t.toLowerCase()];return u||n.error(t),(e||!(a=o))&&f(e||"*",i,a=[],o),a.length>0?u(a,r,s):[]}function d(e,r,i,o){for(var s,a,u,l,c,d,h,g,m,v,y,b,x,w=0,T=e.length,k=ne.POS,E=new RegExp("^"+k.source+"(?!"+I+")","i"),N=function(){for(var e=1,n=arguments.length-2;n>e;e++)arguments[e]===t&&(m[e]=t)};T>w;w++){for(s=e[w],a="",g=o,u=0,l=s.length;l>u;u++){if(c=s[u],d=c.string,"PSEUDO"===c.part)for(k.exec(""),h=0;m=k.exec(d);)v=!0,y=k.lastIndex=m.index+m[0].length,y>h&&(a+=d.slice(h,m.index),h=y,b=[r],J.test(a)&&(g&&(b=g),g=o),(x=Q.test(a))&&(a=a.slice(0,-5).replace(J,"$&*"),h++),m.length>1&&m[0].replace(E,N),g=p(a,m[1],m[2],b,g,x)),a="";v||(a+=d),v=!1}a?J.test(a)?f(a,g||[r],i,o):n(a,r,i,o?o.concat(g):g):L.apply(i,g)}return 1===T?i:n.uniqueSort(i)}function h(e,t,n,r,i){e=e.replace(X,"$1");var o,a,u,l,c,f,p,h,v,b=s(e,t,i),x=t.nodeType;if(ne.POS.test(e))return d(b,t,n,r);if(r)o=$.call(r,0);else if(1===b.length){if((c=$.call(b[0],0)).length>2&&"ID"===(f=c[0]).part&&9===x&&!i&&y.relative[c[1].part]){if(t=y.find.ID(f.captures[0].replace(te,""),t,i)[0],!t)return n;e=e.slice(c.shift().string.length)}for(h=(b=Y.exec(c[0].string))&&!b.index&&t.parentNode||t,p="",l=c.length-1;l>=0&&(f=c[l],v=f.part,p=f.string+p,!y.relative[v]);l--)if(y.order.test(v)){if(o=y.find[v](f.captures[0].replace(te,""),h,i),null==o)continue;e=e.slice(0,e.length-p.length)+p.replace(ne[v],""),e||L.apply(n,$.call(o,0));break}}if(e)for(a=T(e,t,i),g=a.dirruns++,null==o&&(o=y.find.TAG("*",Y.test(e)&&t.parentNode||t)),l=0;u=o[l];l++)m=a.runs++,a(u)&&n.push(u);return n}var g,m,v,y,b,x,w,T,k,E,N=!0,_="undefined",C=("sizcache"+Math.random()).replace(".",""),S=e.document,A=S.documentElement,j=0,$=[].slice,L=[].push,H=function(e,t){return e[C]=t||!0,e},D=function(){var e={},t=[];return H(function(n,r){return t.push(n)>y.cacheLength&&delete e[t.shift()],e[n]=r},e)},O=D(),F=D(),M=D(),I="[\\x20\\t\\r\\n\\f]",P="(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",q=P.replace("w","w#"),R="([*^$|!~]?=)",B="\\["+I+"*("+P+")"+I+"*(?:"+R+I+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+q+")|)|)"+I+"*\\]",W=":("+P+")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:"+B+")|[^:]|\\\\.)*|.*))\\)|)",z=":(nth|eq|gt|lt|first|last|even|odd)(?:\\(((?:-\\d)?\\d*)\\)|)(?=[^-]|$)",X=new RegExp("^"+I+"+|((?:^|[^\\\\])(?:\\\\.)*)"+I+"+$","g"),U=new RegExp("^"+I+"*,"+I+"*"),J=new RegExp("^"+I+"*([\\x20\\t\\r\\n\\f>+~])"+I+"*"),V=new RegExp(W),G=/^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,Y=/[\x20\t\r\n\f]*[+~]/,Q=/:not\($/,Z=/h\d/i,ee=/input|select|textarea|button/i,te=/\\(?!\\)/g,ne={ID:new RegExp("^#("+P+")"),CLASS:new RegExp("^\\.("+P+")"),NAME:new RegExp("^\\[name=['\"]?("+P+")['\"]?\\]"),TAG:new RegExp("^("+P.replace("w","w*")+")"),ATTR:new RegExp("^"+B),PSEUDO:new RegExp("^"+W),CHILD:new RegExp("^:(only|nth|last|first)-child(?:\\("+I+"*(even|odd|(([+-]|)(\\d*)n|)"+I+"*(?:([+-]|)"+I+"*(\\d+)|))"+I+"*\\)|)","i"),POS:new RegExp(z,"ig"),needsContext:new RegExp("^"+I+"*[>+~]|"+z,"i")},re=function(e){var t=S.createElement("div");try{return e(t)}catch(n){return!1}finally{t=null}},ie=re(function(e){return e.appendChild(S.createComment("")),!e.getElementsByTagName("*").length}),oe=re(function(e){return e.innerHTML="<a href='#'></a>",e.firstChild&&typeof e.firstChild.getAttribute!==_&&"#"===e.firstChild.getAttribute("href")}),se=re(function(e){e.innerHTML="<select></select>";var t=typeof e.lastChild.getAttribute("multiple");return"boolean"!==t&&"string"!==t}),ae=re(function(e){return e.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",e.getElementsByClassName&&e.getElementsByClassName("e").length?(e.lastChild.className="e",2===e.getElementsByClassName("e").length):!1}),ue=re(function(e){e.id=C+0,e.innerHTML="<a name='"+C+"'></a><div name='"+C+"'></div>",A.insertBefore(e,A.firstChild);var t=S.getElementsByName&&S.getElementsByName(C).length===2+S.getElementsByName(C+0).length;return v=!S.getElementById(C),A.removeChild(e),t});try{$.call(A.childNodes,0)[0].nodeType}catch(le){$=function(e){for(var t,n=[];t=this[e];e++)n.push(t);return n}}n.matches=function(e,t){return n(e,null,null,t)},n.matchesSelector=function(e,t){return n(t,null,null,[e]).length>0},b=n.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=b(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r];r++)n+=b(t);return n},x=n.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?"HTML"!==t.nodeName:!1},w=n.contains=A.contains?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!!(r&&1===r.nodeType&&n.contains&&n.contains(r))}:A.compareDocumentPosition?function(e,t){return t&&!!(16&e.compareDocumentPosition(t))}:function(e,t){for(;t=t.parentNode;)if(t===e)return!0;return!1},n.attr=function(e,t){var n,r=x(e);return r||(t=t.toLowerCase()),y.attrHandle[t]?y.attrHandle[t](e):se||r?e.getAttribute(t):(n=e.getAttributeNode(t),n?"boolean"==typeof e[t]?e[t]?t:null:n.specified?n.value:null:null)},y=n.selectors={cacheLength:50,createPseudo:H,match:ne,order:new RegExp("ID|TAG"+(ue?"|NAME":"")+(ae?"|CLASS":"")),attrHandle:oe?{}:{href:function(e){return e.getAttribute("href",2)},type:function(e){return e.getAttribute("type")}},find:{ID:v?function(e,t,n){if(typeof t.getElementById!==_&&!n){var r=t.getElementById(e);return r&&r.parentNode?[r]:[]}}:function(e,n,r){if(typeof n.getElementById!==_&&!r){var i=n.getElementById(e);return i?i.id===e||typeof i.getAttributeNode!==_&&i.getAttributeNode("id").value===e?[i]:t:[]}},TAG:ie?function(e,t){return typeof t.getElementsByTagName!==_?t.getElementsByTagName(e):void 0}:function(e,t){var n=t.getElementsByTagName(e);if("*"===e){for(var r,i=[],o=0;r=n[o];o++)1===r.nodeType&&i.push(r);return i}return n},NAME:function(e,t){return typeof t.getElementsByName!==_?t.getElementsByName(name):void 0},CLASS:function(e,t,n){return typeof t.getElementsByClassName===_||n?void 0:t.getElementsByClassName(e)}},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,""),e[3]=(e[4]||e[5]||"").replace(te,""),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1]?(e[2]||n.error(e[0]),e[3]=+(e[3]?e[4]+(e[5]||1):2*("even"===e[2]||"odd"===e[2])),e[4]=+(e[6]+e[7]||"odd"===e[2])):e[2]&&n.error(e[0]),e},PSEUDO:function(e,t,n){var r,i;return ne.CHILD.test(e[0])?null:(e[3]?e[2]=e[3]:(r=e[4])&&(V.test(r)&&(i=s(r,t,n,!0))&&(i=r.indexOf(")",r.length-i)-r.length)&&(r=r.slice(0,i),e[0]=e[0].slice(0,i)),e[2]=r),e.slice(0,3))}},filter:{ID:v?function(e){return e=e.replace(te,""),function(t){return t.getAttribute("id")===e}}:function(e){return e=e.replace(te,""),function(t){var n=typeof t.getAttributeNode!==_&&t.getAttributeNode("id");return n&&n.value===e}},TAG:function(e){return"*"===e?function(){return!0}:(e=e.replace(te,"").toLowerCase(),function(t){return t.nodeName&&t.nodeName.toLowerCase()===e})},CLASS:function(e){var t=O[C][e];return t||(t=O(e,new RegExp("(^|"+I+")"+e+"("+I+"|$)"))),function(e){return t.test(e.className||typeof e.getAttribute!==_&&e.getAttribute("class")||"")}},ATTR:function(e,t,r){return t?function(i){var o=n.attr(i,e),s=o+"";if(null==o)return"!="===t;switch(t){case"=":return s===r;case"!=":return s!==r;case"^=":return r&&0===s.indexOf(r);case"*=":return r&&s.indexOf(r)>-1;case"$=":return r&&s.substr(s.length-r.length)===r;case"~=":return(" "+s+" ").indexOf(r)>-1;case"|=":return s===r||s.substr(0,r.length+1)===r+"-"}}:function(t){return null!=n.attr(t,e)}},CHILD:function(e,t,n,r){if("nth"===e){var i=j++;return function(e){var t,o,s=0,a=e;if(1===n&&0===r)return!0;if(t=e.parentNode,t&&(t[C]!==i||!e.sizset)){for(a=t.firstChild;a&&(1!==a.nodeType||(a.sizset=++s,a!==e));a=a.nextSibling);t[C]=i}return o=e.sizset-r,0===n?0===o:o%n===0&&o/n>=0}}return function(t){var n=t;switch(e){case"only":case"first":for(;n=n.previousSibling;)if(1===n.nodeType)return!1;if("first"===e)return!0;n=t;case"last":for(;n=n.nextSibling;)if(1===n.nodeType)return!1;return!0}}},PSEUDO:function(e,t,r,i){var o,s=y.pseudos[e]||y.pseudos[e.toLowerCase()];return s||n.error("unsupported pseudo: "+e),s[C]?s(t,r,i):s.length>1?(o=[e,e,"",t],function(e){return s(e,0,o)}):s}},pseudos:{not:H(function(e,t,n){var r=T(e.replace(X,"$1"),t,n);return function(e){return!r(e)}}),enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},parent:function(e){return!y.pseudos.empty(e)},empty:function(e){var t;for(e=e.firstChild;e;){if(e.nodeName>"@"||3===(t=e.nodeType)||4===t)return!1;e=e.nextSibling}return!0},contains:H(function(e){return function(t){return(t.textContent||t.innerText||b(t)).indexOf(e)>-1}}),has:H(function(e){return function(t){return n(e,t).length>0}}),header:function(e){return Z.test(e.nodeName)},text:function(e){var t,n;return"input"===e.nodeName.toLowerCase()&&"text"===(t=e.type)&&(null==(n=e.getAttribute("type"))||n.toLowerCase()===t)},radio:r("radio"),checkbox:r("checkbox"),file:r("file"),password:r("password"),image:r("image"),submit:i("submit"),reset:i("reset"),button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},input:function(e){return ee.test(e.nodeName)},focus:function(e){var t=e.ownerDocument;return e===t.activeElement&&(!t.hasFocus||t.hasFocus())&&(!!e.type||!!e.href)},active:function(e){return e===e.ownerDocument.activeElement}},setFilters:{first:function(e,t,n){return n?e.slice(1):[e[0]]},last:function(e,t,n){var r=e.pop();return n?e:[r]},even:function(e,t,n){for(var r=[],i=n?1:0,o=e.length;o>i;i+=2)r.push(e[i]);return r},odd:function(e,t,n){for(var r=[],i=n?0:1,o=e.length;o>i;i+=2)r.push(e[i]);return r},lt:function(e,t,n){return n?e.slice(+t):e.slice(0,+t)},gt:function(e,t,n){return n?e.slice(0,+t+1):e.slice(+t+1)},eq:function(e,t,n){var r=e.splice(+t,1);return n?e:r}}},k=A.compareDocumentPosition?function(e,t){return e===t?(E=!0,0):(e.compareDocumentPosition&&t.compareDocumentPosition?4&e.compareDocumentPosition(t):e.compareDocumentPosition)?-1:1}:function(e,t){if(e===t)return E=!0,0;if(e.sourceIndex&&t.sourceIndex)return e.sourceIndex-t.sourceIndex;var n,r,i=[],s=[],a=e.parentNode,u=t.parentNode,l=a;if(a===u)return o(e,t);if(!a)return-1;if(!u)return 1;for(;l;)i.unshift(l),l=l.parentNode;for(l=u;l;)s.unshift(l),l=l.parentNode;n=i.length,r=s.length;for(var c=0;n>c&&r>c;c++)if(i[c]!==s[c])return o(i[c],s[c]);return c===n?o(e,s[c],-1):o(i[c],t,1)},[0,0].sort(k),N=!E,n.uniqueSort=function(e){var t,n=1;if(E=N,e.sort(k),E)for(;t=e[n];n++)t===e[n-1]&&e.splice(n--,1);return e},n.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},T=n.compile=function(e,t,n){var r,i,o,a=M[C][e];if(a&&a.context===t)return a;for(r=s(e,t,n),i=0,o=r.length;o>i;i++)r[i]=l(r[i],t,n);return a=M(e,c(r)),a.context=t,a.runs=a.dirruns=0,a},S.querySelectorAll&&function(){var e,t=h,r=/'|\\/g,i=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,o=[],a=[":active"],u=A.matchesSelector||A.mozMatchesSelector||A.webkitMatchesSelector||A.oMatchesSelector||A.msMatchesSelector;re(function(e){e.innerHTML="<select><option selected=''></option></select>",e.querySelectorAll("[selected]").length||o.push("\\["+I+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),e.querySelectorAll(":checked").length||o.push(":checked")}),re(function(e){e.innerHTML="<p test=''></p>",e.querySelectorAll("[test^='']").length&&o.push("[*^$]="+I+"*(?:\"\"|'')"),e.innerHTML="<input type='hidden'/>",e.querySelectorAll(":enabled").length||o.push(":enabled",":disabled")}),o=o.length&&new RegExp(o.join("|")),h=function(e,n,i,a,u){if(!(a||u||o&&o.test(e)))if(9===n.nodeType)try{return L.apply(i,$.call(n.querySelectorAll(e),0)),i}catch(l){}else if(1===n.nodeType&&"object"!==n.nodeName.toLowerCase()){var c,f,p,d=n.getAttribute("id"),h=d||C,g=Y.test(e)&&n.parentNode||n;for(d?h=h.replace(r,"\\$&"):n.setAttribute("id",h),c=s(e,n,u),h="[id='"+h+"']",f=0,p=c.length;p>f;f++)c[f]=h+c[f].selector;try{return L.apply(i,$.call(g.querySelectorAll(c.join(",")),0)),i}catch(l){}finally{d||n.removeAttribute("id")}}return t(e,n,i,a,u)},u&&(re(function(t){e=u.call(t,"div");try{u.call(t,"[test!='']:sizzle"),a.push(ne.PSEUDO.source,ne.POS.source,"!=")}catch(n){}}),a=new RegExp(a.join("|")),n.matchesSelector=function(t,r){if(r=r.replace(i,"='$1']"),!(x(t)||a.test(r)||o&&o.test(r)))try{var s=u.call(t,r);if(s||e||t.document&&11!==t.document.nodeType)return s}catch(l){}return n(r,null,null,[t]).length>0})}(),y.setFilters.nth=y.setFilters.eq,y.filters=y.pseudos,n.attr=K.attr,K.find=n,K.expr=n.selectors,K.expr[":"]=K.expr.pseudos,K.unique=n.uniqueSort,K.text=n.getText,K.isXMLDoc=n.isXML,K.contains=n.contains}(e);var De=/Until$/,Oe=/^(?:parents|prev(?:Until|All))/,Fe=/^.[^:#\[\.,]*$/,Me=K.expr.match.needsContext,Ie={children:!0,contents:!0,next:!0,prev:!0};K.fn.extend({find:function(e){var t,n,r,i,o,s,a=this;if("string"!=typeof e)return K(e).filter(function(){for(t=0,n=a.length;n>t;t++)if(K.contains(a[t],this))return!0});for(s=this.pushStack("","find",e),t=0,n=this.length;n>t;t++)if(r=s.length,K.find(e,this[t],s),t>0)for(i=r;i<s.length;i++)for(o=0;r>o;o++)if(s[o]===s[i]){s.splice(i--,1);break}return s},has:function(e){var t,n=K(e,this),r=n.length;return this.filter(function(){for(t=0;r>t;t++)if(K.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(l(this,e,!1),"not",e)},filter:function(e){return this.pushStack(l(this,e,!0),"filter",e)},is:function(e){return!!e&&("string"==typeof e?Me.test(e)?K(e,this.context).index(this[0])>=0:K.filter(e,this).length>0:this.filter(e).length>0)},closest:function(e,t){for(var n,r=0,i=this.length,o=[],s=Me.test(e)||"string"!=typeof e?K(e,t||this.context):0;i>r;r++)for(n=this[r];n&&n.ownerDocument&&n!==t&&11!==n.nodeType;){if(s?s.index(n)>-1:K.find.matchesSelector(n,e)){o.push(n);break}n=n.parentNode}return o=o.length>1?K.unique(o):o,this.pushStack(o,"closest",e)},index:function(e){return e?"string"==typeof e?K.inArray(this[0],K(e)):K.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(e,t){var n="string"==typeof e?K(e,t):K.makeArray(e&&e.nodeType?[e]:e),r=K.merge(this.get(),n);return this.pushStack(a(n[0])||a(r[0])?r:K.unique(r))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),K.fn.andSelf=K.fn.addBack,K.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return K.dir(e,"parentNode")},parentsUntil:function(e,t,n){return K.dir(e,"parentNode",n)},next:function(e){return u(e,"nextSibling")},prev:function(e){return u(e,"previousSibling")},nextAll:function(e){return K.dir(e,"nextSibling")},prevAll:function(e){return K.dir(e,"previousSibling")},nextUntil:function(e,t,n){return K.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return K.dir(e,"previousSibling",n)},siblings:function(e){return K.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return K.sibling(e.firstChild)},contents:function(e){return K.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:K.merge([],e.childNodes)}},function(e,t){K.fn[e]=function(n,r){var i=K.map(this,t,n);return De.test(e)||(r=n),r&&"string"==typeof r&&(i=K.filter(r,i)),i=this.length>1&&!Ie[e]?K.unique(i):i,this.length>1&&Oe.test(e)&&(i=i.reverse()),this.pushStack(i,e,J.call(arguments).join(","))}}),K.extend({filter:function(e,t,n){return n&&(e=":not("+e+")"),1===t.length?K.find.matchesSelector(t[0],e)?[t[0]]:[]:K.find.matches(e,t)},dir:function(e,n,r){for(var i=[],o=e[n];o&&9!==o.nodeType&&(r===t||1!==o.nodeType||!K(o).is(r));)1===o.nodeType&&i.push(o),o=o[n];return i},sibling:function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}});var Pe="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",qe=/ jQuery\d+="(?:null|\d+)"/g,Re=/^\s+/,Be=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,We=/<([\w:]+)/,ze=/<tbody/i,Xe=/<|&#?\w+;/,Ue=/<(?:script|style|link)/i,Je=/<(?:script|object|embed|option|style)/i,Ve=new RegExp("<(?:"+Pe+")[\\s/>]","i"),Ge=/^(?:checkbox|radio)$/,Ye=/checked\s*(?:[^=]|=\s*.checked.)/i,Qe=/\/(java|ecma)script/i,Ke=/^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,Ze={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],
tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},et=c(R),tt=et.appendChild(R.createElement("div"));Ze.optgroup=Ze.option,Ze.tbody=Ze.tfoot=Ze.colgroup=Ze.caption=Ze.thead,Ze.th=Ze.td,K.support.htmlSerialize||(Ze._default=[1,"X<div>","</div>"]),K.fn.extend({text:function(e){return K.access(this,function(e){return e===t?K.text(this):this.empty().append((this[0]&&this[0].ownerDocument||R).createTextNode(e))},null,e,arguments.length)},wrapAll:function(e){if(K.isFunction(e))return this.each(function(t){K(this).wrapAll(e.call(this,t))});if(this[0]){var t=K(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstChild&&1===e.firstChild.nodeType;)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return K.isFunction(e)?this.each(function(t){K(this).wrapInner(e.call(this,t))}):this.each(function(){var t=K(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=K.isFunction(e);return this.each(function(n){K(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){K.nodeName(this,"body")||K(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(e){(1===this.nodeType||11===this.nodeType)&&this.appendChild(e)})},prepend:function(){return this.domManip(arguments,!0,function(e){(1===this.nodeType||11===this.nodeType)&&this.insertBefore(e,this.firstChild)})},before:function(){if(!a(this[0]))return this.domManip(arguments,!1,function(e){this.parentNode.insertBefore(e,this)});if(arguments.length){var e=K.clean(arguments);return this.pushStack(K.merge(e,this),"before",this.selector)}},after:function(){if(!a(this[0]))return this.domManip(arguments,!1,function(e){this.parentNode.insertBefore(e,this.nextSibling)});if(arguments.length){var e=K.clean(arguments);return this.pushStack(K.merge(this,e),"after",this.selector)}},remove:function(e,t){for(var n,r=0;null!=(n=this[r]);r++)(!e||K.filter(e,[n]).length)&&(!t&&1===n.nodeType&&(K.cleanData(n.getElementsByTagName("*")),K.cleanData([n])),n.parentNode&&n.parentNode.removeChild(n));return this},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)for(1===e.nodeType&&K.cleanData(e.getElementsByTagName("*"));e.firstChild;)e.removeChild(e.firstChild);return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return K.clone(this,e,t)})},html:function(e){return K.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return 1===n.nodeType?n.innerHTML.replace(qe,""):t;if("string"==typeof e&&!Ue.test(e)&&(K.support.htmlSerialize||!Ve.test(e))&&(K.support.leadingWhitespace||!Re.test(e))&&!Ze[(We.exec(e)||["",""])[1].toLowerCase()]){e=e.replace(Be,"<$1></$2>");try{for(;i>r;r++)n=this[r]||{},1===n.nodeType&&(K.cleanData(n.getElementsByTagName("*")),n.innerHTML=e);n=0}catch(o){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(e){return a(this[0])?this.length?this.pushStack(K(K.isFunction(e)?e():e),"replaceWith",e):this:K.isFunction(e)?this.each(function(t){var n=K(this),r=n.html();n.replaceWith(e.call(this,t,r))}):("string"!=typeof e&&(e=K(e).detach()),this.each(function(){var t=this.nextSibling,n=this.parentNode;K(this).remove(),t?K(t).before(e):K(n).append(e)}))},detach:function(e){return this.remove(e,!0)},domManip:function(e,n,r){e=[].concat.apply([],e);var i,o,s,a,u=0,l=e[0],c=[],p=this.length;if(!K.support.checkClone&&p>1&&"string"==typeof l&&Ye.test(l))return this.each(function(){K(this).domManip(e,n,r)});if(K.isFunction(l))return this.each(function(i){var o=K(this);e[0]=l.call(this,i,n?o.html():t),o.domManip(e,n,r)});if(this[0]){if(i=K.buildFragment(e,this,c),s=i.fragment,o=s.firstChild,1===s.childNodes.length&&(s=o),o)for(n=n&&K.nodeName(o,"tr"),a=i.cacheable||p-1;p>u;u++)r.call(n&&K.nodeName(this[u],"table")?f(this[u],"tbody"):this[u],u===a?s:K.clone(s,!0,!0));s=o=null,c.length&&K.each(c,function(e,t){t.src?K.ajax?K.ajax({url:t.src,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0}):K.error("no ajax"):K.globalEval((t.text||t.textContent||t.innerHTML||"").replace(Ke,"")),t.parentNode&&t.parentNode.removeChild(t)})}return this}}),K.buildFragment=function(e,n,r){var i,o,s,a=e[0];return n=n||R,n=!n.nodeType&&n[0]||n,n=n.ownerDocument||n,1===e.length&&"string"==typeof a&&a.length<512&&n===R&&"<"===a.charAt(0)&&!Je.test(a)&&(K.support.checkClone||!Ye.test(a))&&(K.support.html5Clone||!Ve.test(a))&&(o=!0,i=K.fragments[a],s=i!==t),i||(i=n.createDocumentFragment(),K.clean(e,n,i,r),o&&(K.fragments[a]=s&&i)),{fragment:i,cacheable:o}},K.fragments={},K.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){K.fn[e]=function(n){var r,i=0,o=[],s=K(n),a=s.length,u=1===this.length&&this[0].parentNode;if((null==u||u&&11===u.nodeType&&1===u.childNodes.length)&&1===a)return s[t](this[0]),this;for(;a>i;i++)r=(i>0?this.clone(!0):this).get(),K(s[i])[t](r),o=o.concat(r);return this.pushStack(o,e,s.selector)}}),K.extend({clone:function(e,t,n){var r,i,o,s;if(K.support.html5Clone||K.isXMLDoc(e)||!Ve.test("<"+e.nodeName+">")?s=e.cloneNode(!0):(tt.innerHTML=e.outerHTML,tt.removeChild(s=tt.firstChild)),!(K.support.noCloneEvent&&K.support.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||K.isXMLDoc(e)))for(d(e,s),r=h(e),i=h(s),o=0;r[o];++o)i[o]&&d(r[o],i[o]);if(t&&(p(e,s),n))for(r=h(e),i=h(s),o=0;r[o];++o)p(r[o],i[o]);return r=i=null,s},clean:function(e,t,n,r){var i,o,s,a,u,l,f,p,d,h,m,v=t===R&&et,y=[];for(t&&"undefined"!=typeof t.createDocumentFragment||(t=R),i=0;null!=(s=e[i]);i++)if("number"==typeof s&&(s+=""),s){if("string"==typeof s)if(Xe.test(s)){for(v=v||c(t),f=t.createElement("div"),v.appendChild(f),s=s.replace(Be,"<$1></$2>"),a=(We.exec(s)||["",""])[1].toLowerCase(),u=Ze[a]||Ze._default,l=u[0],f.innerHTML=u[1]+s+u[2];l--;)f=f.lastChild;if(!K.support.tbody)for(p=ze.test(s),d="table"!==a||p?"<table>"!==u[1]||p?[]:f.childNodes:f.firstChild&&f.firstChild.childNodes,o=d.length-1;o>=0;--o)K.nodeName(d[o],"tbody")&&!d[o].childNodes.length&&d[o].parentNode.removeChild(d[o]);!K.support.leadingWhitespace&&Re.test(s)&&f.insertBefore(t.createTextNode(Re.exec(s)[0]),f.firstChild),s=f.childNodes,f.parentNode.removeChild(f)}else s=t.createTextNode(s);s.nodeType?y.push(s):K.merge(y,s)}if(f&&(s=f=v=null),!K.support.appendChecked)for(i=0;null!=(s=y[i]);i++)K.nodeName(s,"input")?g(s):"undefined"!=typeof s.getElementsByTagName&&K.grep(s.getElementsByTagName("input"),g);if(n)for(h=function(e){return!e.type||Qe.test(e.type)?r?r.push(e.parentNode?e.parentNode.removeChild(e):e):n.appendChild(e):void 0},i=0;null!=(s=y[i]);i++)K.nodeName(s,"script")&&h(s)||(n.appendChild(s),"undefined"!=typeof s.getElementsByTagName&&(m=K.grep(K.merge([],s.getElementsByTagName("script")),h),y.splice.apply(y,[i+1,0].concat(m)),i+=m.length));return y},cleanData:function(e,t){for(var n,r,i,o,s=0,a=K.expando,u=K.cache,l=K.support.deleteExpando,c=K.event.special;null!=(i=e[s]);s++)if((t||K.acceptData(i))&&(r=i[a],n=r&&u[r])){if(n.events)for(o in n.events)c[o]?K.event.remove(i,o):K.removeEvent(i,o,n.handle);u[r]&&(delete u[r],l?delete i[a]:i.removeAttribute?i.removeAttribute(a):i[a]=null,K.deletedIds.push(r))}}}),function(){var e,t;K.uaMatch=function(e){e=e.toLowerCase();var t=/(chrome)[ \/]([\w.]+)/.exec(e)||/(webkit)[ \/]([\w.]+)/.exec(e)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e)||/(msie) ([\w.]+)/.exec(e)||e.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)||[];return{browser:t[1]||"",version:t[2]||"0"}},e=K.uaMatch(W.userAgent),t={},e.browser&&(t[e.browser]=!0,t.version=e.version),t.chrome?t.webkit=!0:t.webkit&&(t.safari=!0),K.browser=t,K.sub=function(){function e(t,n){return new e.fn.init(t,n)}K.extend(!0,e,this),e.superclass=this,e.fn=e.prototype=this(),e.fn.constructor=e,e.sub=this.sub,e.fn.init=function n(n,r){return r&&r instanceof K&&!(r instanceof e)&&(r=e(r)),K.fn.init.call(this,n,r,t)},e.fn.init.prototype=e.fn;var t=e(R);return e}}();var nt,rt,it,ot=/alpha\([^)]*\)/i,st=/opacity=([^)]*)/,at=/^(top|right|bottom|left)$/,ut=/^(none|table(?!-c[ea]).+)/,lt=/^margin/,ct=new RegExp("^("+Z+")(.*)$","i"),ft=new RegExp("^("+Z+")(?!px)[a-z%]+$","i"),pt=new RegExp("^([-+])=("+Z+")","i"),dt={},ht={position:"absolute",visibility:"hidden",display:"block"},gt={letterSpacing:0,fontWeight:400},mt=["Top","Right","Bottom","Left"],vt=["Webkit","O","Moz","ms"],yt=K.fn.toggle;K.fn.extend({css:function(e,n){return K.access(this,function(e,n,r){return r!==t?K.style(e,n,r):K.css(e,n)},e,n,arguments.length>1)},show:function(){return y(this,!0)},hide:function(){return y(this)},toggle:function(e,t){var n="boolean"==typeof e;return K.isFunction(e)&&K.isFunction(t)?yt.apply(this,arguments):this.each(function(){(n?e:v(this))?K(this).show():K(this).hide()})}}),K.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=nt(e,"opacity");return""===n?"1":n}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":K.support.cssFloat?"cssFloat":"styleFloat"},style:function(e,n,r,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,s,a,u=K.camelCase(n),l=e.style;if(n=K.cssProps[u]||(K.cssProps[u]=m(l,u)),a=K.cssHooks[n]||K.cssHooks[u],r===t)return a&&"get"in a&&(o=a.get(e,!1,i))!==t?o:l[n];if(s=typeof r,"string"===s&&(o=pt.exec(r))&&(r=(o[1]+1)*o[2]+parseFloat(K.css(e,n)),s="number"),!(null==r||"number"===s&&isNaN(r)||("number"===s&&!K.cssNumber[u]&&(r+="px"),a&&"set"in a&&(r=a.set(e,r,i))===t)))try{l[n]=r}catch(c){}}},css:function(e,n,r,i){var o,s,a,u=K.camelCase(n);return n=K.cssProps[u]||(K.cssProps[u]=m(e.style,u)),a=K.cssHooks[n]||K.cssHooks[u],a&&"get"in a&&(o=a.get(e,!0,i)),o===t&&(o=nt(e,n)),"normal"===o&&n in gt&&(o=gt[n]),r||i!==t?(s=parseFloat(o),r||K.isNumeric(s)?s||0:o):o},swap:function(e,t,n){var r,i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];r=n.call(e);for(i in t)e.style[i]=o[i];return r}}),e.getComputedStyle?nt=function(t,n){var r,i,o,s,a=e.getComputedStyle(t,null),u=t.style;return a&&(r=a[n],""===r&&!K.contains(t.ownerDocument,t)&&(r=K.style(t,n)),ft.test(r)&&lt.test(n)&&(i=u.width,o=u.minWidth,s=u.maxWidth,u.minWidth=u.maxWidth=u.width=r,r=a.width,u.width=i,u.minWidth=o,u.maxWidth=s)),r}:R.documentElement.currentStyle&&(nt=function(e,t){var n,r,i=e.currentStyle&&e.currentStyle[t],o=e.style;return null==i&&o&&o[t]&&(i=o[t]),ft.test(i)&&!at.test(t)&&(n=o.left,r=e.runtimeStyle&&e.runtimeStyle.left,r&&(e.runtimeStyle.left=e.currentStyle.left),o.left="fontSize"===t?"1em":i,i=o.pixelLeft+"px",o.left=n,r&&(e.runtimeStyle.left=r)),""===i?"auto":i}),K.each(["height","width"],function(e,t){K.cssHooks[t]={get:function(e,n,r){return n?0===e.offsetWidth&&ut.test(nt(e,"display"))?K.swap(e,ht,function(){return w(e,t,r)}):w(e,t,r):void 0},set:function(e,n,r){return b(e,n,r?x(e,t,r,K.support.boxSizing&&"border-box"===K.css(e,"boxSizing")):0)}}}),K.support.opacity||(K.cssHooks.opacity={get:function(e,t){return st.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var n=e.style,r=e.currentStyle,i=K.isNumeric(t)?"alpha(opacity="+100*t+")":"",o=r&&r.filter||n.filter||"";n.zoom=1,t>=1&&""===K.trim(o.replace(ot,""))&&n.removeAttribute&&(n.removeAttribute("filter"),r&&!r.filter)||(n.filter=ot.test(o)?o.replace(ot,i):o+" "+i)}}),K(function(){K.support.reliableMarginRight||(K.cssHooks.marginRight={get:function(e,t){return K.swap(e,{display:"inline-block"},function(){return t?nt(e,"marginRight"):void 0})}}),!K.support.pixelPosition&&K.fn.position&&K.each(["top","left"],function(e,t){K.cssHooks[t]={get:function(e,n){if(n){var r=nt(e,t);return ft.test(r)?K(e).position()[t]+"px":r}}}})}),K.expr&&K.expr.filters&&(K.expr.filters.hidden=function(e){return 0===e.offsetWidth&&0===e.offsetHeight||!K.support.reliableHiddenOffsets&&"none"===(e.style&&e.style.display||nt(e,"display"))},K.expr.filters.visible=function(e){return!K.expr.filters.hidden(e)}),K.each({margin:"",padding:"",border:"Width"},function(e,t){K.cssHooks[e+t]={expand:function(n){var r,i="string"==typeof n?n.split(" "):[n],o={};for(r=0;4>r;r++)o[e+mt[r]+t]=i[r]||i[r-2]||i[0];return o}},lt.test(e)||(K.cssHooks[e+t].set=b)});var bt=/%20/g,xt=/\[\]$/,wt=/\r?\n/g,Tt=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,kt=/^(?:select|textarea)/i;K.fn.extend({serialize:function(){return K.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?K.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||kt.test(this.nodeName)||Tt.test(this.type))}).map(function(e,t){var n=K(this).val();return null==n?null:K.isArray(n)?K.map(n,function(e,n){return{name:t.name,value:e.replace(wt,"\r\n")}}):{name:t.name,value:n.replace(wt,"\r\n")}}).get()}}),K.param=function(e,n){var r,i=[],o=function(e,t){t=K.isFunction(t)?t():null==t?"":t,i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(n===t&&(n=K.ajaxSettings&&K.ajaxSettings.traditional),K.isArray(e)||e.jquery&&!K.isPlainObject(e))K.each(e,function(){o(this.name,this.value)});else for(r in e)k(r,e[r],n,o);return i.join("&").replace(bt,"+")};var Et,Nt,_t=/#.*$/,Ct=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,St=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,At=/^(?:GET|HEAD)$/,jt=/^\/\//,$t=/\?/,Lt=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,Ht=/([?&])_=[^&]*/,Dt=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,Ot=K.fn.load,Ft={},Mt={},It=["*/"]+["*"];try{Et=B.href}catch(Pt){Et=R.createElement("a"),Et.href="",Et=Et.href}Nt=Dt.exec(Et.toLowerCase())||[],K.fn.load=function(e,n,r){if("string"!=typeof e&&Ot)return Ot.apply(this,arguments);if(!this.length)return this;var i,o,s,a=this,u=e.indexOf(" ");return u>=0&&(i=e.slice(u,e.length),e=e.slice(0,u)),K.isFunction(n)?(r=n,n=t):n&&"object"==typeof n&&(o="POST"),K.ajax({url:e,type:o,dataType:"html",data:n,complete:function(e,t){r&&a.each(r,s||[e.responseText,t,e])}}).done(function(e){s=arguments,a.html(i?K("<div>").append(e.replace(Lt,"")).find(i):e)}),this},K.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(e,t){K.fn[t]=function(e){return this.on(t,e)}}),K.each(["get","post"],function(e,n){K[n]=function(e,r,i,o){return K.isFunction(r)&&(o=o||i,i=r,r=t),K.ajax({type:n,url:e,data:r,success:i,dataType:o})}}),K.extend({getScript:function(e,n){return K.get(e,t,n,"script")},getJSON:function(e,t,n){return K.get(e,t,n,"json")},ajaxSetup:function(e,t){return t?_(e,K.ajaxSettings):(t=e,e=K.ajaxSettings),_(e,t),e},ajaxSettings:{url:Et,isLocal:St.test(Nt[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":It},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":e.String,"text html":!0,"text json":K.parseJSON,"text xml":K.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:E(Ft),ajaxTransport:E(Mt),ajax:function(e,n){function r(e,n,r,s){var l,f,y,b,w,k=n;2!==x&&(x=2,u&&clearTimeout(u),a=t,o=s||"",T.readyState=e>0?4:0,r&&(b=C(p,T,r)),e>=200&&300>e||304===e?(p.ifModified&&(w=T.getResponseHeader("Last-Modified"),w&&(K.lastModified[i]=w),w=T.getResponseHeader("Etag"),w&&(K.etag[i]=w)),304===e?(k="notmodified",l=!0):(l=S(p,b),k=l.state,f=l.data,y=l.error,l=!y)):(y=k,(!k||e)&&(k="error",0>e&&(e=0))),T.status=e,T.statusText=""+(n||k),l?g.resolveWith(d,[f,k,T]):g.rejectWith(d,[T,k,y]),T.statusCode(v),v=t,c&&h.trigger("ajax"+(l?"Success":"Error"),[T,p,l?f:y]),m.fireWith(d,[T,k]),c&&(h.trigger("ajaxComplete",[T,p]),--K.active||K.event.trigger("ajaxStop")))}"object"==typeof e&&(n=e,e=t),n=n||{};var i,o,s,a,u,l,c,f,p=K.ajaxSetup({},n),d=p.context||p,h=d!==p&&(d.nodeType||d instanceof K)?K(d):K.event,g=K.Deferred(),m=K.Callbacks("once memory"),v=p.statusCode||{},y={},b={},x=0,w="canceled",T={readyState:0,setRequestHeader:function(e,t){if(!x){var n=e.toLowerCase();e=b[n]=b[n]||e,y[e]=t}return this},getAllResponseHeaders:function(){return 2===x?o:null},getResponseHeader:function(e){var n;if(2===x){if(!s)for(s={};n=Ct.exec(o);)s[n[1].toLowerCase()]=n[2];n=s[e.toLowerCase()]}return n===t?null:n},overrideMimeType:function(e){return x||(p.mimeType=e),this},abort:function(e){return e=e||w,a&&a.abort(e),r(0,e),this}};if(g.promise(T),T.success=T.done,T.error=T.fail,T.complete=m.add,T.statusCode=function(e){if(e){var t;if(2>x)for(t in e)v[t]=[v[t],e[t]];else t=e[T.status],T.always(t)}return this},p.url=((e||p.url)+"").replace(_t,"").replace(jt,Nt[1]+"//"),p.dataTypes=K.trim(p.dataType||"*").toLowerCase().split(te),null==p.crossDomain&&(l=Dt.exec(p.url.toLowerCase()),p.crossDomain=!(!l||l[1]==Nt[1]&&l[2]==Nt[2]&&(l[3]||("http:"===l[1]?80:443))==(Nt[3]||("http:"===Nt[1]?80:443)))),p.data&&p.processData&&"string"!=typeof p.data&&(p.data=K.param(p.data,p.traditional)),N(Ft,p,n,T),2===x)return T;if(c=p.global,p.type=p.type.toUpperCase(),p.hasContent=!At.test(p.type),c&&0===K.active++&&K.event.trigger("ajaxStart"),!p.hasContent&&(p.data&&(p.url+=($t.test(p.url)?"&":"?")+p.data,delete p.data),i=p.url,p.cache===!1)){var k=K.now(),E=p.url.replace(Ht,"$1_="+k);p.url=E+(E===p.url?($t.test(p.url)?"&":"?")+"_="+k:"")}(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&T.setRequestHeader("Content-Type",p.contentType),p.ifModified&&(i=i||p.url,K.lastModified[i]&&T.setRequestHeader("If-Modified-Since",K.lastModified[i]),K.etag[i]&&T.setRequestHeader("If-None-Match",K.etag[i])),T.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+It+"; q=0.01":""):p.accepts["*"]);for(f in p.headers)T.setRequestHeader(f,p.headers[f]);if(!p.beforeSend||p.beforeSend.call(d,T,p)!==!1&&2!==x){w="abort";for(f in{success:1,error:1,complete:1})T[f](p[f]);if(a=N(Mt,p,n,T)){T.readyState=1,c&&h.trigger("ajaxSend",[T,p]),p.async&&p.timeout>0&&(u=setTimeout(function(){T.abort("timeout")},p.timeout));try{x=1,a.send(y,r)}catch(_){if(!(2>x))throw _;r(-1,_)}}else r(-1,"No Transport");return T}return T.abort()},active:0,lastModified:{},etag:{}});var qt=[],Rt=/\?/,Bt=/(=)\?(?=&|$)|\?\?/,Wt=K.now();K.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=qt.pop()||K.expando+"_"+Wt++;return this[e]=!0,e}}),K.ajaxPrefilter("json jsonp",function(n,r,i){var o,s,a,u=n.data,l=n.url,c=n.jsonp!==!1,f=c&&Bt.test(l),p=c&&!f&&"string"==typeof u&&!(n.contentType||"").indexOf("application/x-www-form-urlencoded")&&Bt.test(u);return"jsonp"===n.dataTypes[0]||f||p?(o=n.jsonpCallback=K.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,s=e[o],f?n.url=l.replace(Bt,"$1"+o):p?n.data=u.replace(Bt,"$1"+o):c&&(n.url+=(Rt.test(l)?"&":"?")+n.jsonp+"="+o),n.converters["script json"]=function(){return a||K.error(o+" was not called"),a[0]},n.dataTypes[0]="json",e[o]=function(){a=arguments},i.always(function(){e[o]=s,n[o]&&(n.jsonpCallback=r.jsonpCallback,qt.push(o)),a&&K.isFunction(s)&&s(a[0]),a=s=t}),"script"):void 0}),K.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(e){return K.globalEval(e),e}}}),K.ajaxPrefilter("script",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),K.ajaxTransport("script",function(e){if(e.crossDomain){var n,r=R.head||R.getElementsByTagName("head")[0]||R.documentElement;return{send:function(i,o){n=R.createElement("script"),n.async="async",e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,i){(i||!n.readyState||/loaded|complete/.test(n.readyState))&&(n.onload=n.onreadystatechange=null,r&&n.parentNode&&r.removeChild(n),n=t,i||o(200,"success"))},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(0,1)}}}});var zt,Xt=e.ActiveXObject?function(){for(var e in zt)zt[e](0,1)}:!1,Ut=0;K.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&A()||j()}:A,function(e){K.extend(K.support,{ajax:!!e,cors:!!e&&"withCredentials"in e})}(K.ajaxSettings.xhr()),K.support.ajax&&K.ajaxTransport(function(n){if(!n.crossDomain||K.support.cors){var r;return{send:function(i,o){var s,a,u=n.xhr();if(n.username?u.open(n.type,n.url,n.async,n.username,n.password):u.open(n.type,n.url,n.async),n.xhrFields)for(a in n.xhrFields)u[a]=n.xhrFields[a];n.mimeType&&u.overrideMimeType&&u.overrideMimeType(n.mimeType),!n.crossDomain&&!i["X-Requested-With"]&&(i["X-Requested-With"]="XMLHttpRequest");try{for(a in i)u.setRequestHeader(a,i[a])}catch(l){}u.send(n.hasContent&&n.data||null),r=function(e,i){var a,l,c,f,p;try{if(r&&(i||4===u.readyState))if(r=t,s&&(u.onreadystatechange=K.noop,Xt&&delete zt[s]),i)4!==u.readyState&&u.abort();else{a=u.status,c=u.getAllResponseHeaders(),f={},p=u.responseXML,p&&p.documentElement&&(f.xml=p);try{f.text=u.responseText}catch(e){}try{l=u.statusText}catch(d){l=""}a||!n.isLocal||n.crossDomain?1223===a&&(a=204):a=f.text?200:404}}catch(h){i||o(-1,h)}f&&o(a,l,f,c)},n.async?4===u.readyState?setTimeout(r,0):(s=++Ut,Xt&&(zt||(zt={},K(e).unload(Xt)),zt[s]=r),u.onreadystatechange=r):r()},abort:function(){r&&r(0,1)}}}});var Jt,Vt,Gt=/^(?:toggle|show|hide)$/,Yt=new RegExp("^(?:([-+])=|)("+Z+")([a-z%]*)$","i"),Qt=/queueHooks$/,Kt=[O],Zt={"*":[function(e,t){var n,r,i,o=this.createTween(e,t),s=Yt.exec(t),a=o.cur(),u=+a||0,l=1;if(s){if(n=+s[2],r=s[3]||(K.cssNumber[e]?"":"px"),"px"!==r&&u){u=K.css(o.elem,e,!0)||n||1;do i=l=l||".5",u/=l,K.style(o.elem,e,u+r),l=o.cur()/a;while(1!==l&&l!==i)}o.unit=r,o.start=u,o.end=s[1]?u+(s[1]+1)*n:n}return o}]};K.Animation=K.extend(H,{tweener:function(e,t){K.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");for(var n,r=0,i=e.length;i>r;r++)n=e[r],Zt[n]=Zt[n]||[],Zt[n].unshift(t)},prefilter:function(e,t){t?Kt.unshift(e):Kt.push(e)}}),K.Tween=F,F.prototype={constructor:F,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||"swing",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(K.cssNumber[n]?"":"px")},cur:function(){var e=F.propHooks[this.prop];return e&&e.get?e.get(this):F.propHooks._default.get(this)},run:function(e){var t,n=F.propHooks[this.prop];return this.options.duration?this.pos=t=K.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):F.propHooks._default.set(this),this}},F.prototype.init.prototype=F.prototype,F.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=K.css(e.elem,e.prop,!1,""),t&&"auto"!==t?t:0):e.elem[e.prop]},set:function(e){K.fx.step[e.prop]?K.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[K.cssProps[e.prop]]||K.cssHooks[e.prop])?K.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},F.propHooks.scrollTop=F.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},K.each(["toggle","show","hide"],function(e,t){var n=K.fn[t];K.fn[t]=function(r,i,o){return null==r||"boolean"==typeof r||!e&&K.isFunction(r)&&K.isFunction(i)?n.apply(this,arguments):this.animate(M(t,!0),r,i,o)}}),K.fn.extend({fadeTo:function(e,t,n,r){return this.filter(v).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=K.isEmptyObject(e),o=K.speed(t,n,r),s=function(){var t=H(this,K.extend({},e),o);i&&t.stop(!0)};return i||o.queue===!1?this.each(s):this.queue(o.queue,s)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return"string"!=typeof e&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,n=null!=e&&e+"queueHooks",o=K.timers,s=K._data(this);if(n)s[n]&&s[n].stop&&i(s[n]);else for(n in s)s[n]&&s[n].stop&&Qt.test(n)&&i(s[n]);for(n=o.length;n--;)o[n].elem===this&&(null==e||o[n].queue===e)&&(o[n].anim.stop(r),t=!1,o.splice(n,1));(t||!r)&&K.dequeue(this,e)})}}),K.each({slideDown:M("show"),slideUp:M("hide"),slideToggle:M("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){K.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),K.speed=function(e,t,n){var r=e&&"object"==typeof e?K.extend({},e):{complete:n||!n&&t||K.isFunction(e)&&e,duration:e,easing:n&&t||t&&!K.isFunction(t)&&t};return r.duration=K.fx.off?0:"number"==typeof r.duration?r.duration:r.duration in K.fx.speeds?K.fx.speeds[r.duration]:K.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue="fx"),r.old=r.complete,r.complete=function(){K.isFunction(r.old)&&r.old.call(this),r.queue&&K.dequeue(this,r.queue)},r},K.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},K.timers=[],K.fx=F.prototype.init,K.fx.tick=function(){for(var e,t=K.timers,n=0;n<t.length;n++)e=t[n],!e()&&t[n]===e&&t.splice(n--,1);t.length||K.fx.stop()},K.fx.timer=function(e){e()&&K.timers.push(e)&&!Vt&&(Vt=setInterval(K.fx.tick,K.fx.interval))},K.fx.interval=13,K.fx.stop=function(){clearInterval(Vt),Vt=null},K.fx.speeds={slow:600,fast:200,_default:400},K.fx.step={},K.expr&&K.expr.filters&&(K.expr.filters.animated=function(e){return K.grep(K.timers,function(t){return e===t.elem}).length});var en=/^(?:body|html)$/i;K.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){K.offset.setOffset(this,e,t)});var n,r,i,o,s,a,u,l,c,f,p=this[0],d=p&&p.ownerDocument;if(d)return(i=d.body)===p?K.offset.bodyOffset(p):(r=d.documentElement,K.contains(r,p)?(n=p.getBoundingClientRect(),o=I(d),s=r.clientTop||i.clientTop||0,a=r.clientLeft||i.clientLeft||0,u=o.pageYOffset||r.scrollTop,l=o.pageXOffset||r.scrollLeft,c=n.top+u-s,f=n.left+l-a,{top:c,left:f}):{top:0,left:0})},K.offset={bodyOffset:function(e){var t=e.offsetTop,n=e.offsetLeft;return K.support.doesNotIncludeMarginInBodyOffset&&(t+=parseFloat(K.css(e,"marginTop"))||0,n+=parseFloat(K.css(e,"marginLeft"))||0),{top:t,left:n}},setOffset:function(e,t,n){var r=K.css(e,"position");"static"===r&&(e.style.position="relative");var i,o,s=K(e),a=s.offset(),u=K.css(e,"top"),l=K.css(e,"left"),c=("absolute"===r||"fixed"===r)&&K.inArray("auto",[u,l])>-1,f={},p={};c?(p=s.position(),i=p.top,o=p.left):(i=parseFloat(u)||0,o=parseFloat(l)||0),K.isFunction(t)&&(t=t.call(e,n,a)),null!=t.top&&(f.top=t.top-a.top+i),null!=t.left&&(f.left=t.left-a.left+o),"using"in t?t.using.call(e,f):s.css(f)}},K.fn.extend({position:function(){if(this[0]){var e=this[0],t=this.offsetParent(),n=this.offset(),r=en.test(t[0].nodeName)?{top:0,left:0}:t.offset();return n.top-=parseFloat(K.css(e,"marginTop"))||0,n.left-=parseFloat(K.css(e,"marginLeft"))||0,r.top+=parseFloat(K.css(t[0],"borderTopWidth"))||0,r.left+=parseFloat(K.css(t[0],"borderLeftWidth"))||0,{top:n.top-r.top,left:n.left-r.left}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent||R.body;e&&!en.test(e.nodeName)&&"static"===K.css(e,"position");)e=e.offsetParent;return e||R.body})}}),K.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,n){var r=/Y/.test(n);K.fn[e]=function(i){return K.access(this,function(e,i,o){var s=I(e);return o===t?s?n in s?s[n]:s.document.documentElement[i]:e[i]:void(s?s.scrollTo(r?K(s).scrollLeft():o,r?o:K(s).scrollTop()):e[i]=o)},e,i,arguments.length,null)}}),K.each({Height:"height",Width:"width"},function(e,n){K.each({padding:"inner"+e,content:n,"":"outer"+e},function(r,i){K.fn[i]=function(i,o){var s=arguments.length&&(r||"boolean"!=typeof i),a=r||(i===!0||o===!0?"margin":"border");return K.access(this,function(n,r,i){var o;return K.isWindow(n)?n.document.documentElement["client"+e]:9===n.nodeType?(o=n.documentElement,Math.max(n.body["scroll"+e],o["scroll"+e],n.body["offset"+e],o["offset"+e],o["client"+e])):i===t?K.css(n,r,i,a):K.style(n,r,i,a)},n,s?i:t,s,null)}})}),e.jQuery=e.$=K,"function"==typeof define&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return K})}(window),function(){var e=this,t=e._,n={},r=Array.prototype,i=Object.prototype,o=Function.prototype,s=r.push,a=r.slice,u=r.concat,l=i.toString,c=i.hasOwnProperty,f=r.forEach,p=r.map,d=r.reduce,h=r.reduceRight,g=r.filter,m=r.every,v=r.some,y=r.indexOf,b=r.lastIndexOf,x=Array.isArray,w=Object.keys,T=o.bind,k=function(e){return e instanceof k?e:this instanceof k?void(this._wrapped=e):new k(e)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=k),exports._=k):e._=k,k.VERSION="1.6.0";var E=k.each=k.forEach=function(e,t,r){if(null==e)return e;if(f&&e.forEach===f)e.forEach(t,r);else if(e.length===+e.length){for(var i=0,o=e.length;o>i;i++)if(t.call(r,e[i],i,e)===n)return}else for(var s=k.keys(e),i=0,o=s.length;o>i;i++)if(t.call(r,e[s[i]],s[i],e)===n)return;return e};k.map=k.collect=function(e,t,n){var r=[];return null==e?r:p&&e.map===p?e.map(t,n):(E(e,function(e,i,o){r.push(t.call(n,e,i,o))}),r)};var N="Reduce of empty array with no initial value";k.reduce=k.foldl=k.inject=function(e,t,n,r){var i=arguments.length>2;if(null==e&&(e=[]),d&&e.reduce===d)return r&&(t=k.bind(t,r)),i?e.reduce(t,n):e.reduce(t);if(E(e,function(e,o,s){i?n=t.call(r,n,e,o,s):(n=e,i=!0)}),!i)throw new TypeError(N);return n},k.reduceRight=k.foldr=function(e,t,n,r){var i=arguments.length>2;if(null==e&&(e=[]),h&&e.reduceRight===h)return r&&(t=k.bind(t,r)),i?e.reduceRight(t,n):e.reduceRight(t);var o=e.length;if(o!==+o){var s=k.keys(e);o=s.length}if(E(e,function(a,u,l){u=s?s[--o]:--o,i?n=t.call(r,n,e[u],u,l):(n=e[u],i=!0)}),!i)throw new TypeError(N);return n},k.find=k.detect=function(e,t,n){var r;return _(e,function(e,i,o){return t.call(n,e,i,o)?(r=e,!0):void 0}),r},k.filter=k.select=function(e,t,n){var r=[];return null==e?r:g&&e.filter===g?e.filter(t,n):(E(e,function(e,i,o){t.call(n,e,i,o)&&r.push(e)}),r)},k.reject=function(e,t,n){return k.filter(e,function(e,r,i){return!t.call(n,e,r,i)},n)},k.every=k.all=function(e,t,r){t||(t=k.identity);var i=!0;return null==e?i:m&&e.every===m?e.every(t,r):(E(e,function(e,o,s){return(i=i&&t.call(r,e,o,s))?void 0:n}),!!i)};var _=k.some=k.any=function(e,t,r){t||(t=k.identity);var i=!1;return null==e?i:v&&e.some===v?e.some(t,r):(E(e,function(e,o,s){return i||(i=t.call(r,e,o,s))?n:void 0}),!!i)};k.contains=k.include=function(e,t){return null==e?!1:y&&e.indexOf===y?-1!=e.indexOf(t):_(e,function(e){return e===t})},k.invoke=function(e,t){var n=a.call(arguments,2),r=k.isFunction(t);return k.map(e,function(e){return(r?t:e[t]).apply(e,n)})},k.pluck=function(e,t){return k.map(e,k.property(t))},k.where=function(e,t){return k.filter(e,k.matches(t))},k.findWhere=function(e,t){return k.find(e,k.matches(t))},k.max=function(e,t,n){if(!t&&k.isArray(e)&&e[0]===+e[0]&&e.length<65535)return Math.max.apply(Math,e);var r=-(1/0),i=-(1/0);return E(e,function(e,o,s){var a=t?t.call(n,e,o,s):e;a>i&&(r=e,i=a)}),r},k.min=function(e,t,n){if(!t&&k.isArray(e)&&e[0]===+e[0]&&e.length<65535)return Math.min.apply(Math,e);var r=1/0,i=1/0;return E(e,function(e,o,s){var a=t?t.call(n,e,o,s):e;i>a&&(r=e,i=a)}),r},k.shuffle=function(e){var t,n=0,r=[];return E(e,function(e){t=k.random(n++),r[n-1]=r[t],r[t]=e}),r},k.sample=function(e,t,n){return null==t||n?(e.length!==+e.length&&(e=k.values(e)),e[k.random(e.length-1)]):k.shuffle(e).slice(0,Math.max(0,t))};var C=function(e){return null==e?k.identity:k.isFunction(e)?e:k.property(e)};k.sortBy=function(e,t,n){return t=C(t),k.pluck(k.map(e,function(e,r,i){return{value:e,index:r,criteria:t.call(n,e,r,i)}}).sort(function(e,t){var n=e.criteria,r=t.criteria;if(n!==r){if(n>r||void 0===n)return 1;if(r>n||void 0===r)return-1}return e.index-t.index}),"value")};var S=function(e){return function(t,n,r){var i={};return n=C(n),E(t,function(o,s){
var a=n.call(r,o,s,t);e(i,a,o)}),i}};k.groupBy=S(function(e,t,n){k.has(e,t)?e[t].push(n):e[t]=[n]}),k.indexBy=S(function(e,t,n){e[t]=n}),k.countBy=S(function(e,t){k.has(e,t)?e[t]++:e[t]=1}),k.sortedIndex=function(e,t,n,r){n=C(n);for(var i=n.call(r,t),o=0,s=e.length;s>o;){var a=o+s>>>1;n.call(r,e[a])<i?o=a+1:s=a}return o},k.toArray=function(e){return e?k.isArray(e)?a.call(e):e.length===+e.length?k.map(e,k.identity):k.values(e):[]},k.size=function(e){return null==e?0:e.length===+e.length?e.length:k.keys(e).length},k.first=k.head=k.take=function(e,t,n){return null!=e?null==t||n?e[0]:0>t?[]:a.call(e,0,t):void 0},k.initial=function(e,t,n){return a.call(e,0,e.length-(null==t||n?1:t))},k.last=function(e,t,n){return null!=e?null==t||n?e[e.length-1]:a.call(e,Math.max(e.length-t,0)):void 0},k.rest=k.tail=k.drop=function(e,t,n){return a.call(e,null==t||n?1:t)},k.compact=function(e){return k.filter(e,k.identity)};var A=function(e,t,n){return t&&k.every(e,k.isArray)?u.apply(n,e):(E(e,function(e){k.isArray(e)||k.isArguments(e)?t?s.apply(n,e):A(e,t,n):n.push(e)}),n)};k.flatten=function(e,t){return A(e,t,[])},k.without=function(e){return k.difference(e,a.call(arguments,1))},k.partition=function(e,t,n){t=C(t);var r=[],i=[];return E(e,function(e){(t.call(n,e)?r:i).push(e)}),[r,i]},k.uniq=k.unique=function(e,t,n,r){k.isFunction(t)&&(r=n,n=t,t=!1);var i=n?k.map(e,n,r):e,o=[],s=[];return E(i,function(n,r){(t?r&&s[s.length-1]===n:k.contains(s,n))||(s.push(n),o.push(e[r]))}),o},k.union=function(){return k.uniq(k.flatten(arguments,!0))},k.intersection=function(e){var t=a.call(arguments,1);return k.filter(k.uniq(e),function(e){return k.every(t,function(t){return k.contains(t,e)})})},k.difference=function(e){var t=u.apply(r,a.call(arguments,1));return k.filter(e,function(e){return!k.contains(t,e)})},k.zip=function(){for(var e=k.max(k.pluck(arguments,"length").concat(0)),t=new Array(e),n=0;e>n;n++)t[n]=k.pluck(arguments,""+n);return t},k.object=function(e,t){if(null==e)return{};for(var n={},r=0,i=e.length;i>r;r++)t?n[e[r]]=t[r]:n[e[r][0]]=e[r][1];return n},k.indexOf=function(e,t,n){if(null==e)return-1;var r=0,i=e.length;if(n){if("number"!=typeof n)return r=k.sortedIndex(e,t),e[r]===t?r:-1;r=0>n?Math.max(0,i+n):n}if(y&&e.indexOf===y)return e.indexOf(t,n);for(;i>r;r++)if(e[r]===t)return r;return-1},k.lastIndexOf=function(e,t,n){if(null==e)return-1;var r=null!=n;if(b&&e.lastIndexOf===b)return r?e.lastIndexOf(t,n):e.lastIndexOf(t);for(var i=r?n:e.length;i--;)if(e[i]===t)return i;return-1},k.range=function(e,t,n){arguments.length<=1&&(t=e||0,e=0),n=arguments[2]||1;for(var r=Math.max(Math.ceil((t-e)/n),0),i=0,o=new Array(r);r>i;)o[i++]=e,e+=n;return o};var j=function(){};k.bind=function(e,t){var n,r;if(T&&e.bind===T)return T.apply(e,a.call(arguments,1));if(!k.isFunction(e))throw new TypeError;return n=a.call(arguments,2),r=function(){if(!(this instanceof r))return e.apply(t,n.concat(a.call(arguments)));j.prototype=e.prototype;var i=new j;j.prototype=null;var o=e.apply(i,n.concat(a.call(arguments)));return Object(o)===o?o:i}},k.partial=function(e){var t=a.call(arguments,1);return function(){for(var n=0,r=t.slice(),i=0,o=r.length;o>i;i++)r[i]===k&&(r[i]=arguments[n++]);for(;n<arguments.length;)r.push(arguments[n++]);return e.apply(this,r)}},k.bindAll=function(e){var t=a.call(arguments,1);if(0===t.length)throw new Error("bindAll must be passed function names");return E(t,function(t){e[t]=k.bind(e[t],e)}),e},k.memoize=function(e,t){var n={};return t||(t=k.identity),function(){var r=t.apply(this,arguments);return k.has(n,r)?n[r]:n[r]=e.apply(this,arguments)}},k.delay=function(e,t){var n=a.call(arguments,2);return setTimeout(function(){return e.apply(null,n)},t)},k.defer=function(e){return k.delay.apply(k,[e,1].concat(a.call(arguments,1)))},k.throttle=function(e,t,n){var r,i,o,s=null,a=0;n||(n={});var u=function(){a=n.leading===!1?0:k.now(),s=null,o=e.apply(r,i),r=i=null};return function(){var l=k.now();a||n.leading!==!1||(a=l);var c=t-(l-a);return r=this,i=arguments,0>=c?(clearTimeout(s),s=null,a=l,o=e.apply(r,i),r=i=null):s||n.trailing===!1||(s=setTimeout(u,c)),o}},k.debounce=function(e,t,n){var r,i,o,s,a,u=function(){var l=k.now()-s;t>l?r=setTimeout(u,t-l):(r=null,n||(a=e.apply(o,i),o=i=null))};return function(){o=this,i=arguments,s=k.now();var l=n&&!r;return r||(r=setTimeout(u,t)),l&&(a=e.apply(o,i),o=i=null),a}},k.once=function(e){var t,n=!1;return function(){return n?t:(n=!0,t=e.apply(this,arguments),e=null,t)}},k.wrap=function(e,t){return k.partial(t,e)},k.compose=function(){var e=arguments;return function(){for(var t=arguments,n=e.length-1;n>=0;n--)t=[e[n].apply(this,t)];return t[0]}},k.after=function(e,t){return function(){return--e<1?t.apply(this,arguments):void 0}},k.keys=function(e){if(!k.isObject(e))return[];if(w)return w(e);var t=[];for(var n in e)k.has(e,n)&&t.push(n);return t},k.values=function(e){for(var t=k.keys(e),n=t.length,r=new Array(n),i=0;n>i;i++)r[i]=e[t[i]];return r},k.pairs=function(e){for(var t=k.keys(e),n=t.length,r=new Array(n),i=0;n>i;i++)r[i]=[t[i],e[t[i]]];return r},k.invert=function(e){for(var t={},n=k.keys(e),r=0,i=n.length;i>r;r++)t[e[n[r]]]=n[r];return t},k.functions=k.methods=function(e){var t=[];for(var n in e)k.isFunction(e[n])&&t.push(n);return t.sort()},k.extend=function(e){return E(a.call(arguments,1),function(t){if(t)for(var n in t)e[n]=t[n]}),e},k.pick=function(e){var t={},n=u.apply(r,a.call(arguments,1));return E(n,function(n){n in e&&(t[n]=e[n])}),t},k.omit=function(e){var t={},n=u.apply(r,a.call(arguments,1));for(var i in e)k.contains(n,i)||(t[i]=e[i]);return t},k.defaults=function(e){return E(a.call(arguments,1),function(t){if(t)for(var n in t)void 0===e[n]&&(e[n]=t[n])}),e},k.clone=function(e){return k.isObject(e)?k.isArray(e)?e.slice():k.extend({},e):e},k.tap=function(e,t){return t(e),e};var $=function(e,t,n,r){if(e===t)return 0!==e||1/e==1/t;if(null==e||null==t)return e===t;e instanceof k&&(e=e._wrapped),t instanceof k&&(t=t._wrapped);var i=l.call(e);if(i!=l.call(t))return!1;switch(i){case"[object String]":return e==String(t);case"[object Number]":return e!=+e?t!=+t:0==e?1/e==1/t:e==+t;case"[object Date]":case"[object Boolean]":return+e==+t;case"[object RegExp]":return e.source==t.source&&e.global==t.global&&e.multiline==t.multiline&&e.ignoreCase==t.ignoreCase}if("object"!=typeof e||"object"!=typeof t)return!1;for(var o=n.length;o--;)if(n[o]==e)return r[o]==t;var s=e.constructor,a=t.constructor;if(s!==a&&!(k.isFunction(s)&&s instanceof s&&k.isFunction(a)&&a instanceof a)&&"constructor"in e&&"constructor"in t)return!1;n.push(e),r.push(t);var u=0,c=!0;if("[object Array]"==i){if(u=e.length,c=u==t.length)for(;u--&&(c=$(e[u],t[u],n,r)););}else{for(var f in e)if(k.has(e,f)&&(u++,!(c=k.has(t,f)&&$(e[f],t[f],n,r))))break;if(c){for(f in t)if(k.has(t,f)&&!u--)break;c=!u}}return n.pop(),r.pop(),c};k.isEqual=function(e,t){return $(e,t,[],[])},k.isEmpty=function(e){if(null==e)return!0;if(k.isArray(e)||k.isString(e))return 0===e.length;for(var t in e)if(k.has(e,t))return!1;return!0},k.isElement=function(e){return!(!e||1!==e.nodeType)},k.isArray=x||function(e){return"[object Array]"==l.call(e)},k.isObject=function(e){return e===Object(e)},E(["Arguments","Function","String","Number","Date","RegExp"],function(e){k["is"+e]=function(t){return l.call(t)=="[object "+e+"]"}}),k.isArguments(arguments)||(k.isArguments=function(e){return!(!e||!k.has(e,"callee"))}),"function"!=typeof/./&&(k.isFunction=function(e){return"function"==typeof e}),k.isFinite=function(e){return isFinite(e)&&!isNaN(parseFloat(e))},k.isNaN=function(e){return k.isNumber(e)&&e!=+e},k.isBoolean=function(e){return e===!0||e===!1||"[object Boolean]"==l.call(e)},k.isNull=function(e){return null===e},k.isUndefined=function(e){return void 0===e},k.has=function(e,t){return c.call(e,t)},k.noConflict=function(){return e._=t,this},k.identity=function(e){return e},k.constant=function(e){return function(){return e}},k.property=function(e){return function(t){return t[e]}},k.matches=function(e){return function(t){if(t===e)return!0;for(var n in e)if(e[n]!==t[n])return!1;return!0}},k.times=function(e,t,n){for(var r=Array(Math.max(0,e)),i=0;e>i;i++)r[i]=t.call(n,i);return r},k.random=function(e,t){return null==t&&(t=e,e=0),e+Math.floor(Math.random()*(t-e+1))},k.now=Date.now||function(){return(new Date).getTime()};var L={escape:{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;"}};L.unescape=k.invert(L.escape);var H={escape:new RegExp("["+k.keys(L.escape).join("")+"]","g"),unescape:new RegExp("("+k.keys(L.unescape).join("|")+")","g")};k.each(["escape","unescape"],function(e){k[e]=function(t){return null==t?"":(""+t).replace(H[e],function(t){return L[e][t]})}}),k.result=function(e,t){if(null!=e){var n=e[t];return k.isFunction(n)?n.call(e):n}},k.mixin=function(e){E(k.functions(e),function(t){var n=k[t]=e[t];k.prototype[t]=function(){var e=[this._wrapped];return s.apply(e,arguments),I.call(this,n.apply(k,e))}})};var D=0;k.uniqueId=function(e){var t=++D+"";return e?e+t:t},k.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var O=/(.)^/,F={"'":"'","\\":"\\","\r":"r","\n":"n","	":"t","\u2028":"u2028","\u2029":"u2029"},M=/\\|'|\r|\n|\t|\u2028|\u2029/g;k.template=function(e,t,n){var r;n=k.defaults({},n,k.templateSettings);var i=new RegExp([(n.escape||O).source,(n.interpolate||O).source,(n.evaluate||O).source].join("|")+"|$","g"),o=0,s="__p+='";e.replace(i,function(t,n,r,i,a){return s+=e.slice(o,a).replace(M,function(e){return"\\"+F[e]}),n&&(s+="'+\n((__t=("+n+"))==null?'':_.escape(__t))+\n'"),r&&(s+="'+\n((__t=("+r+"))==null?'':__t)+\n'"),i&&(s+="';\n"+i+"\n__p+='"),o=a+t.length,t}),s+="';\n",n.variable||(s="with(obj||{}){\n"+s+"}\n"),s="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+s+"return __p;\n";try{r=new Function(n.variable||"obj","_",s)}catch(a){throw a.source=s,a}if(t)return r(t,k);var u=function(e){return r.call(this,e,k)};return u.source="function("+(n.variable||"obj")+"){\n"+s+"}",u},k.chain=function(e){return k(e).chain()};var I=function(e){return this._chain?k(e).chain():e};k.mixin(k),E(["pop","push","reverse","shift","sort","splice","unshift"],function(e){var t=r[e];k.prototype[e]=function(){var n=this._wrapped;return t.apply(n,arguments),"shift"!=e&&"splice"!=e||0!==n.length||delete n[0],I.call(this,n)}}),E(["concat","join","slice"],function(e){var t=r[e];k.prototype[e]=function(){return I.call(this,t.apply(this._wrapped,arguments))}}),k.extend(k.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}}),"function"==typeof define&&define.amd&&define("underscore",[],function(){return k})}.call(this),function(){var e,t=this,n=t.Backbone,r=[],i=r.push,o=r.slice,s=r.splice;e="undefined"!=typeof exports?exports:t.Backbone={},e.VERSION="1.0.0";var a=t._;a||"undefined"==typeof require||(a=require("underscore")),e.$=t.jQuery||t.Zepto||t.ender||t.$,e.noConflict=function(){return t.Backbone=n,this},e.emulateHTTP=!1,e.emulateJSON=!1;var u=e.Events={on:function(e,t,n){if(!c(this,"on",e,[t,n])||!t)return this;this._events||(this._events={});var r=this._events[e]||(this._events[e]=[]);return r.push({callback:t,context:n,ctx:n||this}),this},once:function(e,t,n){if(!c(this,"once",e,[t,n])||!t)return this;var r=this,i=a.once(function(){r.off(e,i),t.apply(this,arguments)});return i._callback=t,this.on(e,i,n)},off:function(e,t,n){var r,i,o,s,u,l,f,p;if(!this._events||!c(this,"off",e,[t,n]))return this;if(!e&&!t&&!n)return this._events={},this;for(s=e?[e]:a.keys(this._events),u=0,l=s.length;l>u;u++)if(e=s[u],o=this._events[e]){if(this._events[e]=r=[],t||n)for(f=0,p=o.length;p>f;f++)i=o[f],(t&&t!==i.callback&&t!==i.callback._callback||n&&n!==i.context)&&r.push(i);r.length||delete this._events[e]}return this},trigger:function(e){if(!this._events)return this;var t=o.call(arguments,1);if(!c(this,"trigger",e,t))return this;var n=this._events[e],r=this._events.all;return n&&f(n,t),r&&f(r,arguments),this},stopListening:function(e,t,n){var r=this._listeners;if(!r)return this;var i=!t&&!n;"object"==typeof t&&(n=this),e&&((r={})[e._listenerId]=e);for(var o in r)r[o].off(t,n,this),i&&delete this._listeners[o];return this}},l=/\s+/,c=function(e,t,n,r){if(!n)return!0;if("object"==typeof n){for(var i in n)e[t].apply(e,[i,n[i]].concat(r));return!1}if(l.test(n)){for(var o=n.split(l),s=0,a=o.length;a>s;s++)e[t].apply(e,[o[s]].concat(r));return!1}return!0},f=function(e,t){var n,r=-1,i=e.length,o=t[0],s=t[1],a=t[2];switch(t.length){case 0:for(;++r<i;)(n=e[r]).callback.call(n.ctx);return;case 1:for(;++r<i;)(n=e[r]).callback.call(n.ctx,o);return;case 2:for(;++r<i;)(n=e[r]).callback.call(n.ctx,o,s);return;case 3:for(;++r<i;)(n=e[r]).callback.call(n.ctx,o,s,a);return;default:for(;++r<i;)(n=e[r]).callback.apply(n.ctx,t)}},p={listenTo:"on",listenToOnce:"once"};a.each(p,function(e,t){u[t]=function(t,n,r){var i=this._listeners||(this._listeners={}),o=t._listenerId||(t._listenerId=a.uniqueId("l"));return i[o]=t,"object"==typeof n&&(r=this),t[e](n,r,this),this}}),u.bind=u.on,u.unbind=u.off,a.extend(e,u);var d=e.Model=function(e,t){var n,r=e||{};t||(t={}),this.cid=a.uniqueId("c"),this.attributes={},t.collection&&(this.collection=t.collection),t.parse&&(r=this.parse(r,t)||{}),t._attrs||(t._attrs=r),(n=a.result(this,"defaults"))&&(r=a.defaults({},r,n)),this.set(r,t),this.changed={},this.initialize.apply(this,arguments)};a.extend(d.prototype,u,{changed:null,validationError:null,idAttribute:"id",initialize:function(){},toJSON:function(e){return a.clone(this.attributes)},sync:function(){return e.sync.apply(this,arguments)},get:function(e){return this.attributes[e]},escape:function(e){return a.escape(this.get(e))},has:function(e){return null!=this.get(e)},set:function(e,t,n){var r,i,o,s,u,l,c,f;if(null==e)return this;if("object"==typeof e?(i=e,n=t):(i={})[e]=t,n||(n={}),!this._validate(i,n))return!1;o=n.unset,u=n.silent,s=[],l=this._changing,this._changing=!0,l||(this._previousAttributes=a.clone(this.attributes),this.changed={}),f=this.attributes,c=this._previousAttributes,this.idAttribute in i&&(this.id=i[this.idAttribute]);for(r in i)t=i[r],a.isEqual(f[r],t)||s.push(r),a.isEqual(c[r],t)?delete this.changed[r]:this.changed[r]=t,o?delete f[r]:f[r]=t;if(!u){s.length&&(this._pending=!0);for(var p=0,d=s.length;d>p;p++)this.trigger("change:"+s[p],this,f[s[p]],n)}if(l)return this;if(!u)for(;this._pending;)this._pending=!1,this.trigger("change",this,n);return this._pending=!1,this._changing=!1,this},unset:function(e,t){return this.set(e,void 0,a.extend({},t,{unset:!0}))},clear:function(e){var t={};for(var n in this.attributes)t[n]=void 0;return this.set(t,a.extend({},e,{unset:!0}))},hasChanged:function(e){return null==e?!a.isEmpty(this.changed):a.has(this.changed,e)},changedAttributes:function(e){if(!e)return this.hasChanged()?a.clone(this.changed):!1;var t,n=!1,r=this._changing?this._previousAttributes:this.attributes;for(var i in e)a.isEqual(r[i],t=e[i])||((n||(n={}))[i]=t);return n},previous:function(e){return null!=e&&this._previousAttributes?this._previousAttributes[e]:null},previousAttributes:function(){return a.clone(this._previousAttributes)},fetch:function(e){e=e?a.clone(e):{},void 0===e.parse&&(e.parse=!0);var t=this,n=e.success;return e.success=function(r){return t.set(t.parse(r,e),e)?(n&&n(t,r,e),void t.trigger("sync",t,r,e)):!1},M(this,e),this.sync("read",this,e)},save:function(e,t,n){var r,i,o,s=this.attributes;if(null==e||"object"==typeof e?(r=e,n=t):(r={})[e]=t,n=a.extend({validate:!0},n),r&&!n.wait){if(!this.set(r,n))return!1}else if(!this._validate(r,n))return!1;r&&n.wait&&(this.attributes=a.extend({},s,r)),void 0===n.parse&&(n.parse=!0);var u=this,l=n.success;return n.success=function(e){u.attributes=s;var t=u.parse(e,n);return n.wait&&(t=a.extend(r||{},t)),a.isObject(t)&&!u.set(t,n)?!1:(l&&l(u,e,n),void u.trigger("sync",u,e,n))},M(this,n),i=this.isNew()?"create":n.patch?"patch":"update","patch"===i&&(n.attrs=r),o=this.sync(i,this,n),r&&n.wait&&(this.attributes=s),o},destroy:function(e){e=e?a.clone(e):{};var t=this,n=e.success,r=function(){t.trigger("destroy",t,t.collection,e)};if(e.success=function(i){(e.wait||t.isNew())&&r(),n&&n(t,i,e),t.isNew()||t.trigger("sync",t,i,e)},this.isNew())return e.success(),!1;M(this,e);var i=this.sync("delete",this,e);return e.wait||r(),i},url:function(){var e=a.result(this,"urlRoot")||a.result(this.collection,"url")||F();return this.isNew()?e:e+("/"===e.charAt(e.length-1)?"":"/")+encodeURIComponent(this.id)},parse:function(e,t){return e},clone:function(){return new this.constructor(this.attributes)},isNew:function(){return null==this.id},isValid:function(e){return this._validate({},a.extend(e||{},{validate:!0}))},_validate:function(e,t){if(!t.validate||!this.validate)return!0;e=a.extend({},this.attributes,e);var n=this.validationError=this.validate(e,t)||null;return n?(this.trigger("invalid",this,n,a.extend(t,{validationError:n})),!1):!0}});var h=["keys","values","pairs","invert","pick","omit"];a.each(h,function(e){d.prototype[e]=function(){var t=o.call(arguments);return t.unshift(this.attributes),a[e].apply(a,t)}});var g=e.Collection=function(e,t){t||(t={}),t.model&&(this.model=t.model),void 0!==t.comparator&&(this.comparator=t.comparator),this._reset(),this.initialize.apply(this,arguments),e&&this.reset(e,a.extend({silent:!0},t))},m={add:!0,remove:!0,merge:!0},v={add:!0,remove:!1};a.extend(g.prototype,u,{model:d,initialize:function(){},toJSON:function(e){return this.map(function(t){return t.toJSON(e)})},sync:function(){return e.sync.apply(this,arguments)},add:function(e,t){return this.set(e,a.extend({merge:!1},t,v))},remove:function(e,t){e=a.isArray(e)?e.slice():[e],t||(t={});var n,r,i,o;for(n=0,r=e.length;r>n;n++)o=this.get(e[n]),o&&(delete this._byId[o.id],delete this._byId[o.cid],i=this.indexOf(o),this.models.splice(i,1),this.length--,t.silent||(t.index=i,o.trigger("remove",o,this,t)),this._removeReference(o));return this},set:function(e,t){t=a.defaults({},t,m),t.parse&&(e=this.parse(e,t)),a.isArray(e)||(e=e?[e]:[]);var n,r,o,u,l,c,f=t.at,p=this.comparator&&null==f&&t.sort!==!1,d=a.isString(this.comparator)?this.comparator:null,h=[],g=[],v={},y=t.add,b=t.merge,x=t.remove,w=!p&&y&&x?[]:!1;for(n=0,r=e.length;r>n;n++)(o=this._prepareModel(u=e[n],t))&&((l=this.get(o))?(x&&(v[l.cid]=!0),b&&(u=u===o?o.attributes:t._attrs,l.set(u,t),p&&!c&&l.hasChanged(d)&&(c=!0))):y&&(h.push(o),o.on("all",this._onModelEvent,this),this._byId[o.cid]=o,null!=o.id&&(this._byId[o.id]=o)),w&&w.push(l||o),delete t._attrs);if(x){for(n=0,r=this.length;r>n;++n)v[(o=this.models[n]).cid]||g.push(o);g.length&&this.remove(g,t)}if((h.length||w&&w.length)&&(p&&(c=!0),this.length+=h.length,null!=f?s.apply(this.models,[f,0].concat(h)):(w&&(this.models.length=0),i.apply(this.models,w||h))),c&&this.sort({silent:!0}),t.silent)return this;for(n=0,r=h.length;r>n;n++)(o=h[n]).trigger("add",o,this,t);return(c||w&&w.length)&&this.trigger("sort",this,t),this},reset:function(e,t){t||(t={});for(var n=0,r=this.models.length;r>n;n++)this._removeReference(this.models[n]);return t.previousModels=this.models,this._reset(),this.add(e,a.extend({silent:!0},t)),t.silent||this.trigger("reset",this,t),this},push:function(e,t){return e=this._prepareModel(e,t),this.add(e,a.extend({at:this.length},t)),e},pop:function(e){var t=this.at(this.length-1);return this.remove(t,e),t},unshift:function(e,t){return e=this._prepareModel(e,t),this.add(e,a.extend({at:0},t)),e},shift:function(e){var t=this.at(0);return this.remove(t,e),t},slice:function(){return o.apply(this.models,arguments)},get:function(e){return null!=e?this._byId[e.id]||this._byId[e.cid]||this._byId[e]:void 0},at:function(e){return this.models[e]},where:function(e,t){return a.isEmpty(e)?t?void 0:[]:this[t?"find":"filter"](function(t){for(var n in e)if(e[n]!==t.get(n))return!1;return!0})},findWhere:function(e){return this.where(e,!0)},sort:function(e){if(!this.comparator)throw new Error("Cannot sort a set without a comparator");return e||(e={}),a.isString(this.comparator)||1===this.comparator.length?this.models=this.sortBy(this.comparator,this):this.models.sort(a.bind(this.comparator,this)),e.silent||this.trigger("sort",this,e),this},sortedIndex:function(e,t,n){t||(t=this.comparator);var r=a.isFunction(t)?t:function(e){return e.get(t)};return a.sortedIndex(this.models,e,r,n)},pluck:function(e){return a.invoke(this.models,"get",e)},fetch:function(e){e=e?a.clone(e):{},void 0===e.parse&&(e.parse=!0);var t=e.success,n=this;return e.success=function(r){var i=e.reset?"reset":"set";n[i](r,e),t&&t(n,r,e),n.trigger("sync",n,r,e)},M(this,e),this.sync("read",this,e)},create:function(e,t){if(t=t?a.clone(t):{},!(e=this._prepareModel(e,t)))return!1;t.wait||this.add(e,t);var n=this,r=t.success;return t.success=function(e,t,i){i.wait&&n.add(e,i),r&&r(e,t,i)},e.save(null,t),e},parse:function(e,t){return e},clone:function(){return new this.constructor(this.models)},_reset:function(){this.length=0,this.models=[],this._byId={}},_prepareModel:function(e,t){if(e instanceof d)return e.collection||(e.collection=this),e;t||(t={}),t.collection=this;var n=new this.model(e,t);return n.validationError?(this.trigger("invalid",this,e,t),!1):n},_removeReference:function(e){this===e.collection&&delete e.collection,e.off("all",this._onModelEvent,this)},_onModelEvent:function(e,t,n,r){("add"!==e&&"remove"!==e||n===this)&&("destroy"===e&&this.remove(t,r),t&&e==="change:"+t.idAttribute&&(delete this._byId[t.previous(t.idAttribute)],null!=t.id&&(this._byId[t.id]=t)),this.trigger.apply(this,arguments))}});var y=["forEach","each","map","collect","reduce","foldl","inject","reduceRight","foldr","find","detect","filter","select","reject","every","all","some","any","include","contains","invoke","max","min","toArray","size","first","head","take","initial","rest","tail","drop","last","without","difference","indexOf","shuffle","lastIndexOf","isEmpty","chain"];a.each(y,function(e){g.prototype[e]=function(){var t=o.call(arguments);return t.unshift(this.models),a[e].apply(a,t)}});var b=["groupBy","countBy","sortBy"];a.each(b,function(e){g.prototype[e]=function(t,n){var r=a.isFunction(t)?t:function(e){return e.get(t)};return a[e](this.models,r,n)}});var x=e.View=function(e){this.cid=a.uniqueId("view"),e||(e={}),a.extend(this,a.pick(e,T)),this._ensureElement(),this.initialize.apply(this,arguments),this.delegateEvents()},w=/^(\S+)\s*(.*)$/,T=["model","collection","el","id","attributes","className","tagName","events"];a.extend(x.prototype,u,{tagName:"div",$:function(e){return this.$el.find(e)},initialize:function(){},render:function(){return this},remove:function(){return this.$el.remove(),this.stopListening(),this},setElement:function(t,n){return this.$el&&this.undelegateEvents(),this.$el=t instanceof e.$?t:e.$(t),this.el=this.$el[0],n!==!1&&this.delegateEvents(),this},delegateEvents:function(e){if(!e&&!(e=a.result(this,"events")))return this;this.undelegateEvents();for(var t in e){var n=e[t];if(a.isFunction(n)||(n=this[e[t]]),n){var r=t.match(w),i=r[1],o=r[2];n=a.bind(n,this),i+=".delegateEvents"+this.cid,""===o?this.$el.on(i,n):this.$el.on(i,o,n)}}return this},undelegateEvents:function(){return this.$el.off(".delegateEvents"+this.cid),this},_ensureElement:function(){if(this.el)this.setElement(a.result(this,"el"),!1);else{var t=a.extend({},a.result(this,"attributes"));this.id&&(t.id=a.result(this,"id")),this.className&&(t["class"]=a.result(this,"className"));var n=e.$("<"+a.result(this,"tagName")+">").attr(t);this.setElement(n,!1)}}}),e.sync=function(t,n,r){var i=E[t];a.defaults(r||(r={}),{emulateHTTP:e.emulateHTTP,emulateJSON:e.emulateJSON});var o={type:i,dataType:"json"};if(r.url||(o.url=a.result(n,"url")||F()),null!=r.data||!n||"create"!==t&&"update"!==t&&"patch"!==t||(o.contentType="application/json",o.data=JSON.stringify(r.attrs||n.toJSON(r))),r.emulateJSON&&(o.contentType="application/x-www-form-urlencoded",o.data=o.data?{model:o.data}:{}),r.emulateHTTP&&("PUT"===i||"DELETE"===i||"PATCH"===i)){o.type="POST",r.emulateJSON&&(o.data._method=i);var s=r.beforeSend;r.beforeSend=function(e){return e.setRequestHeader("X-HTTP-Method-Override",i),s?s.apply(this,arguments):void 0}}"GET"===o.type||r.emulateJSON||(o.processData=!1),"PATCH"===o.type&&k&&(o.xhr=function(){return new ActiveXObject("Microsoft.XMLHTTP")});var u=r.xhr=e.ajax(a.extend(o,r));return n.trigger("request",n,u,r),u};var k=!("undefined"==typeof window||!window.ActiveXObject||window.XMLHttpRequest&&(new XMLHttpRequest).dispatchEvent),E={create:"POST",update:"PUT",patch:"PATCH","delete":"DELETE",read:"GET"};e.ajax=function(){return e.$.ajax.apply(e.$,arguments)};var N=e.Router=function(e){e||(e={}),e.routes&&(this.routes=e.routes),this._bindRoutes(),this.initialize.apply(this,arguments)},_=/\((.*?)\)/g,C=/(\(\?)?:\w+/g,S=/\*\w+/g,A=/[\-{}\[\]+?.,\\\^$|#\s]/g;a.extend(N.prototype,u,{initialize:function(){},route:function(t,n,r){a.isRegExp(t)||(t=this._routeToRegExp(t)),a.isFunction(n)&&(r=n,n=""),r||(r=this[n]);var i=this;return e.history.route(t,function(o){var s=i._extractParameters(t,o);r&&r.apply(i,s),i.trigger.apply(i,["route:"+n].concat(s)),i.trigger("route",n,s),e.history.trigger("route",i,n,s)}),this},navigate:function(t,n){return e.history.navigate(t,n),this},_bindRoutes:function(){if(this.routes){this.routes=a.result(this,"routes");for(var e,t=a.keys(this.routes);null!=(e=t.pop());)this.route(e,this.routes[e])}},_routeToRegExp:function(e){return e=e.replace(A,"\\$&").replace(_,"(?:$1)?").replace(C,function(e,t){return t?e:"([^/]+)"}).replace(S,"(.*?)"),new RegExp("^"+e+"$")},_extractParameters:function(e,t){var n=e.exec(t).slice(1);return a.map(n,function(e){return e?decodeURIComponent(e):null})}});var j=e.History=function(){this.handlers=[],a.bindAll(this,"checkUrl"),"undefined"!=typeof window&&(this.location=window.location,this.history=window.history)},$=/^[#\/]|\s+$/g,L=/^\/+|\/+$/g,H=/msie [\w.]+/,D=/\/$/;j.started=!1,a.extend(j.prototype,u,{interval:50,getHash:function(e){var t=(e||this).location.href.match(/#(.*)$/);return t?t[1]:""},getFragment:function(e,t){if(null==e)if(this._hasPushState||!this._wantsHashChange||t){e=this.location.pathname;var n=this.root.replace(D,"");e.indexOf(n)||(e=e.slice(n.length))}else e=this.getHash();return e.replace($,"")},start:function(t){if(j.started)throw new Error("Backbone.history has already been started");j.started=!0,this.options=a.extend({},{root:"/"},this.options,t),this.root=this.options.root,this._wantsHashChange=this.options.hashChange!==!1,this._wantsPushState=!!this.options.pushState,this._hasPushState=!!(this.options.pushState&&this.history&&this.history.pushState);var n=this.getFragment(),r=document.documentMode,i=H.exec(navigator.userAgent.toLowerCase())&&(!r||7>=r);this.root=("/"+this.root+"/").replace(L,"/"),i&&this._wantsHashChange&&(this.iframe=e.$('<iframe src="javascript:0" tabindex="-1" />').hide().appendTo("body")[0].contentWindow,this.navigate(n)),this._hasPushState?e.$(window).on("popstate",this.checkUrl):this._wantsHashChange&&"onhashchange"in window&&!i?e.$(window).on("hashchange",this.checkUrl):this._wantsHashChange&&(this._checkUrlInterval=setInterval(this.checkUrl,this.interval)),this.fragment=n;var o=this.location,s=o.pathname.replace(/[^\/]$/,"$&/")===this.root;if(this._wantsHashChange&&this._wantsPushState){if(!this._hasPushState&&!s)return this.fragment=this.getFragment(null,!0),this.location.replace(this.root+this.location.search+"#"+this.fragment),!0;this._hasPushState&&s&&o.hash&&(this.fragment=this.getHash().replace($,""),this.history.replaceState({},document.title,this.root+this.fragment+o.search))}return this.options.silent?void 0:this.loadUrl()},stop:function(){e.$(window).off("popstate",this.checkUrl).off("hashchange",this.checkUrl),clearInterval(this._checkUrlInterval),j.started=!1},route:function(e,t){this.handlers.unshift({route:e,callback:t})},checkUrl:function(e){var t=this.getFragment();return t===this.fragment&&this.iframe&&(t=this.getFragment(this.getHash(this.iframe))),t===this.fragment?!1:(this.iframe&&this.navigate(t),void this.loadUrl())},loadUrl:function(e){var t=this.fragment=this.getFragment(e);return a.any(this.handlers,function(e){return e.route.test(t)?(e.callback(t),!0):void 0})},navigate:function(e,t){if(!j.started)return!1;if(t&&t!==!0||(t={trigger:!!t}),e=this.getFragment(e||""),this.fragment!==e){this.fragment=e;var n=this.root+e;if(""===e&&"/"!==n&&(n=n.slice(0,-1)),this._hasPushState)this.history[t.replace?"replaceState":"pushState"]({},document.title,n);else{if(!this._wantsHashChange)return this.location.assign(n);this._updateHash(this.location,e,t.replace),this.iframe&&e!==this.getFragment(this.getHash(this.iframe))&&(t.replace||this.iframe.document.open().close(),this._updateHash(this.iframe.location,e,t.replace))}return t.trigger?this.loadUrl(e):void 0}},_updateHash:function(e,t,n){if(n){var r=e.href.replace(/(javascript:|#).*$/,"");e.replace(r+"#"+t)}else e.hash="#"+t}}),e.history=new j;var O=function(e,t){var n,r=this;n=e&&a.has(e,"constructor")?e.constructor:function(){return r.apply(this,arguments)},a.extend(n,r,t);var i=function(){this.constructor=n};return i.prototype=r.prototype,n.prototype=new i,e&&a.extend(n.prototype,e),n.__super__=r.prototype,n};d.extend=g.extend=N.extend=x.extend=j.extend=O;var F=function(){throw new Error('A "url" property or function must be specified')},M=function(e,t){var n=t.error;t.error=function(r){n&&n(e,r,t),e.trigger("error",e,r,t)}}}.call(this);var FormModel=Backbone.Model.extend({defaults:{sumInv:5e3,mult:40,confines:"$",total_sum:"200 000"},validate:function(e){var t=$(".btn"),n=$(".sum_e.error");if(!(e.sumInv>=100))return n.css("display","block"),t.attr("data-type","close"),$("#sum").css("border","1px solid #E64545"),"incorrect sum";n.css("display","none"),t.attr("data-type","open"),$("#sum").css("border","1px solid #c0c2c4");var r=$(".multi_e.error");if(!(e.mult<=40&&e.mult>=1))return r.css("display","block"),r.html("Неверное значение мультипликатора"),t.attr("data-type","close"),"incorrect sum";r.css("display","none"),t.attr("data-type","open");var i=Math.ceil(.1*e.sumInv),o=e.sumInv;if($("#profit").is(":checked")){var s=$(".profit_e.error");if(e.takeProfit>=i)s.css("display","none"),t.attr("data-type","open");else if(e.takeProfit<i){if("$"==e.confines)return s.css("display","block"),s.html("Не может быть меньше $ "+i),t.attr("data-type","close"),"incorrect";if("%"==e.confines)return s.css("display","block"),s.html("Не может быть меньше 10%"),t.attr("data-type","close"),"incorrect"}}if($("#loss").is(":checked")){var a=$(".loss_e.error");if(e.stopLoss>=i&&e.stopLoss<=o)a.css("display","none"),t.attr("data-type","open");else if(e.stopLoss>o){if("$"==e.confines)return a.css("display","block"),a.html("Не может быть больше $ "+o),t.attr("data-type","close"),"incorrect";if("%"==e.confines)return a.css("display","block"),a.html("Не может быть больше 100%"),t.attr("data-type","close"),"incorrect"}else if(e.stopLoss<i){if("$"==e.confines)return a.css("display","block"),a.html("Не может быть меньше $ "+i),t.attr("data-type","close"),"incorrect";if("%"==e.confines)return a.css("display","block"),a.html("Не может быть меньше 10%"),t.attr("data-type","close"),"incorrect"}}}}),FormView=Backbone.View.extend({events:{"blur #sum":"editSum","blur #multi":"editSum","mouseup .slider_wrap":"editSum","click .wrapper":"toggleMiddle","click #dollar":"editType","click #percent":"editType","click #profit":"editAimProfit","click #loss":"editAimLoss","blur .loss_input":"editLoss","blur .profit_input":"editProfit","click #growth":"sendAjaxGr","click #reduction":"sendAjaxRe","click .btn-loss-u":"changeLossU","click .btn-loss-d":"changeLossD","click .btn-profit-u":"changeProfitU","click .btn-profit-d":"changeProfitD"},initialize:function(){this.template=_.template($("#viewForm").html()),this.render()},render:function(){var e=this.model.toJSON(),t=this.template(e);this.$el.html(t)},toggleMiddle:function(){var e=$(".wrapper"),t=$(".confines");e.toggleClass("open"),
t.toggleClass("open")},editType:function(e){var t=$(".icon-type");"dollar"==this.$(e.target).attr("id")?(this.model.set({confines:"$"}),t.removeClass("icon-percent"),t.addClass("icon-dollar")):"percent"==this.$(e.target).attr("id")&&(this.model.set({confines:"%"}),t.removeClass("icon-dollar"),t.addClass("icon-percent"))},editLoss:function(){var e=parseInt(this.$(".loss_input").val()),t=parseInt(this.$(".profit_input").val()),n=parseInt(this.$("#sum").val()),r=parseInt(this.$("#multi").val()),i=this.model.set({takeProfit:t},{validate:!0});i!==!1&&this.model.set({stopLoss:e,sumInv:n,mult:r},{validate:!0})},editProfit:function(){var e=parseInt(this.$(".profit_input").val()),t=parseInt(this.$("#sum").val()),n=parseInt(this.$(".loss_input").val()),r=parseInt(this.$("#multi").val()),i=this.model.set({stopLoss:n},{validate:!0});i!==!1&&this.model.set({takeProfit:e,sumInv:t,mult:r},{validate:!0})},editAimLoss:function(){var e=$("#loss"),t=$(".wrap.loss"),n=$(".wrap.loss input[type=text]"),r=this.model.get("sumInv");r=Math.ceil(.3*r),e.is(":checked")?(t.removeClass("close"),n.removeAttr("readonly"),n.attr("value",r),this.model.set({stopLoss:r},{validate:!0})):e.is(":checked")||(t.addClass("close"),n.attr("readonly","readonly"),n.attr("value",""),$(".loss_e.error").css("display","none"),this.model.unset("stopLoss"))},editAimProfit:function(){var e=$("#profit"),t=$(".wrap.profit"),n=$(".wrap.profit input[type=text]"),r=this.model.get("sumInv");r=Math.ceil(.3*r),e.is(":checked")?(t.removeClass("close"),n.removeAttr("readonly"),n.attr("value",r),this.model.set({takeProfit:r},{validate:!0})):e.is(":checked")||(t.addClass("close"),n.attr("readonly","readonly"),n.attr("value",""),$(".profit_e.error").css("display","none"),this.model.unset("takeProfit"))},editSum:function(){var e,t,n=parseInt(this.$("input#sum").val()),r=parseInt(this.$("input#multi").val()),i=$("#loss"),o=$("#profit");n>2e5&&(this.$("input#sum").attr("value",2e5),n=2e5);var s=r*n,a=Math.ceil(.3*n),u=$(".wrap.loss input[type=text]"),l=$(".wrap.profit input[type=text]");i.is(":checked")&&(u.attr("value",a),e=a),o.is(":checked")&&(l.attr("value",a),t=a);var c=this.model.set({sumInv:n,mult:r,total_sum:s,stopLoss:e,takeProfit:t},{validate:!0});c!==!1&&$(".total_sum").html(s)},changeLossU:function(){if($("#loss").is(":checked")){var e=parseInt(this.model.get("stopLoss"));e+=1;var t=this.model.set({stopLoss:e},{validate:!0});t!==!1&&$(".loss_input").val(e)}},changeLossD:function(){if($("#loss").is(":checked")){var e=parseInt(this.model.get("stopLoss"));e-=1;var t=this.model.set({stopLoss:e},{validate:!0});t!==!1&&$(".loss_input").val(e)}},changeProfitU:function(){if($("#profit").is(":checked")){var e=parseInt(this.model.get("takeProfit"));e+=1;var t=this.model.set({takeProfit:e},{validate:!0});t!==!1&&$(".profit_input").val(e)}},changeProfitD:function(){if($("#profit").is(":checked")){var e=parseInt(this.model.get("takeProfit"));e-=1;var t=this.model.set({takeProfit:e},{validate:!0});t!==!1&&$(".profit_input").val(e)}},sendAjaxGr:function(){if("open"==$(".btn").attr("data-type")){var e="growth";this.model.set({direction:e});var t=this.model.toJSON();console.log(t),alert("Данные отправлены (Console)")}},sendAjaxRe:function(){if("open"==$(".btn").attr("data-type")){var e="reduction";this.model.set({direction:e});var t=this.model.toJSON();console.log(t),alert("Данные отправлены (Console)")}}});$(function(){var e=new FormModel;new FormView({model:e,el:".inner"})}),$(function(){$("#slider").slider({range:"min",value:20,min:1,max:40,slide:function(e,t){$("#multi").val(t.value)}}),$("#multi").val($("#slider").slider("value")),$(".slider_wrap").mouseup(function(){$(".slider_wrap").css("display","none")}),$("#multi").click(function(){$(".slider_wrap").css("display","block")})});
//# sourceMappingURL=data:application/json;base64,
